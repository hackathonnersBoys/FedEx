{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\NotificationManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationManager = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all notifications\n  const getAllNotifications = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:8000/api/getAllNotifications', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch notifications.');\n      }\n      const data = await response.json();\n      setNotifications(data.notifications);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Mark a notification as resolved\n  const setNotificationResolve = async id => {\n    try {\n      const response = await fetch('http://localhost:8000/api/setNotificationResolve', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to resolve notification.');\n      }\n\n      // Update the resolved status locally\n      setNotifications(prevNotifications => prevNotifications.map(notif => notif.id === id ? {\n        ...notif,\n        is_resolved: true\n      } : notif));\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notification Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getAllNotifications,\n      style: {\n        padding: '10px 20px',\n        backgroundColor: '#007bff',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"View Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), !loading && notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        marginTop: '20px',\n        width: '100%',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: \"Truck ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: \"Geofence ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: \"Resolved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: notif.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: notif.truck_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: notif.notification_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: notif.geofence_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: notif.is_resolved ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: '8px'\n            },\n            children: !notif.is_resolved && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setNotificationResolve(notif.id),\n              style: {\n                padding: '5px 10px',\n                backgroundColor: 'green',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer'\n              },\n              children: \"Mark Resolved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, notif.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationManager, \"KF6TRGnkqZCl0LF0MPDQpmRX4Bk=\");\n_c = NotificationManager;\nexport default NotificationManager;\nvar _c;\n$RefreshReg$(_c, \"NotificationManager\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NotificationManager","_s","notifications","setNotifications","loading","setLoading","error","setError","getAllNotifications","response","fetch","method","headers","ok","Error","data","json","err","message","setNotificationResolve","id","body","JSON","stringify","prevNotifications","map","notif","is_resolved","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","color","border","borderRadius","cursor","length","marginTop","width","borderCollapse","truck_id","notification_type","geofence_id","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/NotificationManager.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst NotificationManager = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch all notifications\r\n  const getAllNotifications = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/getAllNotifications', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch notifications.');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setNotifications(data.notifications);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Mark a notification as resolved\r\n  const setNotificationResolve = async (id) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/setNotificationResolve', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ id }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to resolve notification.');\r\n      }\r\n\r\n      // Update the resolved status locally\r\n      setNotifications((prevNotifications) =>\r\n        prevNotifications.map((notif) =>\r\n          notif.id === id ? { ...notif, is_resolved: true } : notif\r\n        )\r\n      );\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h1>Notification Manager</h1>\r\n      <button\r\n        onClick={getAllNotifications}\r\n        style={{\r\n          padding: '10px 20px',\r\n          backgroundColor: '#007bff',\r\n          color: '#fff',\r\n          border: 'none',\r\n          borderRadius: '5px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        View Notifications\r\n      </button>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {!loading && notifications.length > 0 && (\r\n        <table\r\n          style={{\r\n            marginTop: '20px',\r\n            width: '100%',\r\n            borderCollapse: 'collapse',\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px' }}>ID</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px' }}>Truck ID</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px' }}>Type</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px' }}>Geofence ID</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px' }}>Resolved</th>\r\n              <th style={{ border: '1px solid #ddd', padding: '8px' }}>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {notifications.map((notif) => (\r\n              <tr key={notif.id}>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>{notif.id}</td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>{notif.truck_id}</td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>\r\n                  {notif.notification_type}\r\n                </td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>\r\n                  {notif.geofence_id}\r\n                </td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>\r\n                  {notif.is_resolved ? 'Yes' : 'No'}\r\n                </td>\r\n                <td style={{ border: '1px solid #ddd', padding: '8px' }}>\r\n                  {!notif.is_resolved && (\r\n                    <button\r\n                      onClick={() => setNotificationResolve(notif.id)}\r\n                      style={{\r\n                        padding: '5px 10px',\r\n                        backgroundColor: 'green',\r\n                        color: '#fff',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                      }}\r\n                    >\r\n                      Mark Resolved\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}