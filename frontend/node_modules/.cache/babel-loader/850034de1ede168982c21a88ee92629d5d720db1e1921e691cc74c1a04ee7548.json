{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\WarehouseDashboard .jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WarehouseDashboard = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('incoming'); // Tab state: 'incoming' or 'outgoing'\n  const [warehouseId, setWarehouseId] = useState(''); // User-specified warehouse ID\n  const [trucks, setTrucks] = useState([]);\n  const [error, setError] = useState(null);\n  const [map, setMap] = useState(null); // MapLibre instance\n  const [selectedTruck, setSelectedTruck] = useState(null); // Selected truck for route display\n\n  useEffect(() => {\n    if (!warehouseId) return;\n\n    // Determine the API endpoint based on the active tab and warehouseId\n    const endpoint = activeTab === 'incoming' ? `/api/getIncomingLiveTrucks?warehouseId=${warehouseId}` : `/api/getOutgoingTrucks?warehouseId=${warehouseId}`;\n\n    // Fetch data from the API\n    fetch(endpoint).then(response => {\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setTrucks(data.incomingTrucks || data.outgoing_trucks || []);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, [activeTab, warehouseId]); // Re-fetch data when the active tab or warehouseId changes\n\n  useEffect(() => {\n    // Initialize the MapLibre map\n    const mapInstance = new maplibregl.Map({\n      container: 'map',\n      // Container ID\n      style: 'https://demotiles.maplibre.org/style.json',\n      // Map style URL\n      center: [78.9629, 20.5937],\n      // Center of the map (India as an example)\n      zoom: 4\n    });\n    setMap(mapInstance);\n\n    // Cleanup map instance on component unmount\n    return () => mapInstance.remove();\n  }, []);\n  const handleTruckClick = truck => {\n    setSelectedTruck(truck);\n\n    // Fetch the actual ID for the truck\n    fetch(`/api/devices/getId?uniqueId=${truck.truck_id}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`Error fetching actual ID: ${response.status}`);\n      }\n      return response.json();\n    }).then(idData => {\n      console.log(idData);\n      const actual_id = idData.id; // Assuming the API returns the actual_id in this field\n\n      // Call the API to get geofence details for the truck\n      return fetch(`/api/devices/${actual_id}/manage-geofence`);\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`Error fetching geofence: ${response.status}`);\n      }\n      return response.json();\n    }).then(geofenceData => {\n      const geofenceArea = geofenceData.geofence.area; // Assuming the geofence area is in \"area\" field\n      const routeCoordinates = parseLineString(geofenceArea); // Parse LINESTRING into coordinates\n\n      // Calculate the center of the route\n      const center = calculateCenter(routeCoordinates);\n\n      // Add the route to the map\n      if (map) {\n        map.flyTo({\n          center,\n          // Fly to the center of the route\n          zoom: 11\n        });\n        if (map.getSource('route')) {\n          map.getSource('route').setData({\n            type: 'Feature',\n            geometry: {\n              type: 'LineString',\n              coordinates: routeCoordinates\n            }\n          });\n        } else {\n          map.addSource('route', {\n            type: 'geojson',\n            data: {\n              type: 'Feature',\n              geometry: {\n                type: 'LineString',\n                coordinates: routeCoordinates\n              }\n            }\n          });\n          map.addLayer({\n            id: 'route',\n            type: 'line',\n            source: 'route',\n            layout: {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            paint: {\n              'line-color': '#007bff',\n              'line-width': 4\n            }\n          });\n        }\n      }\n    }).catch(err => {\n      console.error('Error:', err);\n    });\n  };\n\n  // Helper function to parse LINESTRING into coordinates\n  const parseLineString = lineString => {\n    // Remove \"LINESTRING(\" and \")\"\n    const coordinateString = lineString.replace('LINESTRING(', '').replace(')', '');\n    // Split into coordinate pairs\n    const pairs = coordinateString.split(',');\n    // Convert pairs into [longitude, latitude] arrays\n    return pairs.map(pair => {\n      const [lat, lon] = pair.trim().split(' ');\n      return [parseFloat(lon), parseFloat(lat)];\n    });\n  };\n\n  // Helper function to calculate the center of a route\n  const calculateCenter = coordinates => {\n    const total = coordinates.reduce((acc, coord) => {\n      acc[0] += coord[0]; // Sum of longitudes\n      acc[1] += coord[1]; // Sum of latitudes\n      return acc;\n    }, [0, 0]);\n    return [total[0] / coordinates.length, total[1] / coordinates.length]; // Average of longitudes and latitudes\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Truck Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Warehouse ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: warehouseId,\n            onChange: e => setWarehouseId(e.target.value),\n            placeholder: \"Enter Warehouse ID\",\n            style: {\n              padding: '5px',\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!warehouseId) {\n              setError('Please enter a valid warehouse ID.');\n              return;\n            }\n            setError(null);\n          },\n          style: {\n            padding: '5px 10px',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          children: \"Fetch Trucks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '10px 20px',\n            marginRight: '10px',\n            backgroundColor: activeTab === 'incoming' ? '#007bff' : '#ccc',\n            color: '#fff',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          onClick: () => setActiveTab('incoming'),\n          children: \"Incoming Trucks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '10px 20px',\n            backgroundColor: activeTab === 'outgoing' ? '#007bff' : '#ccc',\n            color: '#fff',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          onClick: () => setActiveTab('outgoing'),\n          children: \"Outgoing Trucks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Truck ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Current Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Current Location Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Destination Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Current Weight (kg)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Filled Capacity (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: trucks.length > 0 ? trucks.map(truck => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleTruckClick(truck) // Handle truck click\n            ,\n            style: {\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: truck.truck_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: truck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: truck.current_location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: truck.current_destination\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: truck.current_location_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: truck.current_destination_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: truck.truck_status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: truck.current_weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [truck.filled_capacity.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this)]\n          }, truck.truck_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"9\",\n              style: {\n                textAlign: 'center'\n              },\n              children: [\"No \", activeTab === 'incoming' ? 'incoming' : 'outgoing', \" trucks found.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        flex: 1,\n        height: '100vh',\n        borderLeft: '1px solid #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(WarehouseDashboard, \"rzfwbKQiPikzrP2LsbYSrRp94Eg=\");\n_c = WarehouseDashboard;\nexport default WarehouseDashboard;\nvar _c;\n$RefreshReg$(_c, \"WarehouseDashboard\");","map":{"version":3,"names":["React","useEffect","useState","maplibregl","jsxDEV","_jsxDEV","WarehouseDashboard","_s","activeTab","setActiveTab","warehouseId","setWarehouseId","trucks","setTrucks","error","setError","map","setMap","selectedTruck","setSelectedTruck","endpoint","fetch","then","response","ok","Error","status","json","data","incomingTrucks","outgoing_trucks","catch","err","message","mapInstance","Map","container","style","center","zoom","remove","handleTruckClick","truck","truck_id","idData","console","log","actual_id","id","geofenceData","geofenceArea","geofence","area","routeCoordinates","parseLineString","calculateCenter","flyTo","getSource","setData","type","geometry","coordinates","addSource","addLayer","source","layout","paint","lineString","coordinateString","replace","pairs","split","pair","lat","lon","trim","parseFloat","total","reduce","acc","coord","length","display","children","flex","padding","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","placeholder","marginRight","onClick","backgroundColor","color","border","cursor","width","borderCollapse","name","current_location","current_destination","current_location_name","current_destination_name","truck_status","current_weight","filled_capacity","toFixed","colSpan","textAlign","height","borderLeft","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/WarehouseDashboard .jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport maplibregl from 'maplibre-gl';\r\nimport 'maplibre-gl/dist/maplibre-gl.css';\r\n\r\nconst WarehouseDashboard  = () => {\r\n  const [activeTab, setActiveTab] = useState('incoming'); // Tab state: 'incoming' or 'outgoing'\r\n  const [warehouseId, setWarehouseId] = useState(''); // User-specified warehouse ID\r\n  const [trucks, setTrucks] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [map, setMap] = useState(null); // MapLibre instance\r\n  const [selectedTruck, setSelectedTruck] = useState(null); // Selected truck for route display\r\n\r\n  useEffect(() => {\r\n    if (!warehouseId) return;\r\n\r\n    // Determine the API endpoint based on the active tab and warehouseId\r\n    const endpoint =\r\n      activeTab === 'incoming'\r\n        ? `/api/getIncomingLiveTrucks?warehouseId=${warehouseId}`\r\n        : `/api/getOutgoingTrucks?warehouseId=${warehouseId}`;\r\n\r\n    // Fetch data from the API\r\n    fetch(endpoint)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`Error: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setTrucks(data.incomingTrucks || data.outgoing_trucks || []);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n      });\r\n  }, [activeTab, warehouseId]); // Re-fetch data when the active tab or warehouseId changes\r\n\r\n  useEffect(() => {\r\n    // Initialize the MapLibre map\r\n    const mapInstance = new maplibregl.Map({\r\n      container: 'map', // Container ID\r\n      style: 'https://demotiles.maplibre.org/style.json', // Map style URL\r\n      center: [78.9629, 20.5937], // Center of the map (India as an example)\r\n      zoom: 4,\r\n    });\r\n\r\n    setMap(mapInstance);\r\n\r\n    // Cleanup map instance on component unmount\r\n    return () => mapInstance.remove();\r\n  }, []);\r\n\r\n  \r\n  const handleTruckClick = (truck) => {\r\n    setSelectedTruck(truck);\r\n  \r\n    // Fetch the actual ID for the truck\r\n    fetch(`/api/devices/getId?uniqueId=${truck.truck_id}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching actual ID: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((idData) => {\r\n        console.log(idData);\r\n        const actual_id = idData.id; // Assuming the API returns the actual_id in this field\r\n  \r\n        // Call the API to get geofence details for the truck\r\n        return fetch(`/api/devices/${actual_id}/manage-geofence`);\r\n      })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`Error fetching geofence: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((geofenceData) => {\r\n        const geofenceArea = geofenceData.geofence.area; // Assuming the geofence area is in \"area\" field\r\n        const routeCoordinates = parseLineString(geofenceArea); // Parse LINESTRING into coordinates\r\n  \r\n        // Calculate the center of the route\r\n        const center = calculateCenter(routeCoordinates);\r\n  \r\n        // Add the route to the map\r\n        if (map) {\r\n          map.flyTo({\r\n            center, // Fly to the center of the route\r\n            zoom: 11,\r\n          });\r\n  \r\n          if (map.getSource('route')) {\r\n            map.getSource('route').setData({\r\n              type: 'Feature',\r\n              geometry: {\r\n                type: 'LineString',\r\n                coordinates: routeCoordinates,\r\n              },\r\n            });\r\n          } else {\r\n            map.addSource('route', {\r\n              type: 'geojson',\r\n              data: {\r\n                type: 'Feature',\r\n                geometry: {\r\n                  type: 'LineString',\r\n                  coordinates: routeCoordinates,\r\n                },\r\n              },\r\n            });\r\n  \r\n            map.addLayer({\r\n              id: 'route',\r\n              type: 'line',\r\n              source: 'route',\r\n              layout: {\r\n                'line-join': 'round',\r\n                'line-cap': 'round',\r\n              },\r\n              paint: {\r\n                'line-color': '#007bff',\r\n                'line-width': 4,\r\n              },\r\n            });\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error:', err);\r\n      });\r\n  };\r\n  \r\n  // Helper function to parse LINESTRING into coordinates\r\n  const parseLineString = (lineString) => {\r\n    // Remove \"LINESTRING(\" and \")\"\r\n    const coordinateString = lineString.replace('LINESTRING(', '').replace(')', '');\r\n    // Split into coordinate pairs\r\n    const pairs = coordinateString.split(',');\r\n    // Convert pairs into [longitude, latitude] arrays\r\n    return pairs.map((pair) => {\r\n      const [lat, lon] = pair.trim().split(' ');\r\n      return [parseFloat(lon), parseFloat(lat)];\r\n    });\r\n  };\r\n  \r\n  // Helper function to calculate the center of a route\r\n  const calculateCenter = (coordinates) => {\r\n    const total = coordinates.reduce(\r\n      (acc, coord) => {\r\n        acc[0] += coord[0]; // Sum of longitudes\r\n        acc[1] += coord[1]; // Sum of latitudes\r\n        return acc;\r\n      },\r\n      [0, 0]\r\n    );\r\n  \r\n    return [total[0] / coordinates.length, total[1] / coordinates.length]; // Average of longitudes and latitudes\r\n  };\r\n  \r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div style={{ flex: 1, padding: '20px' }}>\r\n        <h1>Truck Dashboard</h1>\r\n\r\n        {/* Warehouse ID Input */}\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <label>\r\n            <strong>Warehouse ID:</strong>{' '}\r\n            <input\r\n              type=\"text\"\r\n              value={warehouseId}\r\n              onChange={(e) => setWarehouseId(e.target.value)}\r\n              placeholder=\"Enter Warehouse ID\"\r\n              style={{ padding: '5px', marginRight: '10px' }}\r\n            />\r\n          </label>\r\n          <button\r\n            onClick={() => {\r\n              if (!warehouseId) {\r\n                setError('Please enter a valid warehouse ID.');\r\n                return;\r\n              }\r\n              setError(null);\r\n            }}\r\n            style={{\r\n              padding: '5px 10px',\r\n              backgroundColor: '#007bff',\r\n              color: '#fff',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Fetch Trucks\r\n          </button>\r\n        </div>\r\n\r\n        {/* Tab Navigation */}\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <button\r\n            style={{\r\n              padding: '10px 20px',\r\n              marginRight: '10px',\r\n              backgroundColor: activeTab === 'incoming' ? '#007bff' : '#ccc',\r\n              color: '#fff',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n            }}\r\n            onClick={() => setActiveTab('incoming')}\r\n          >\r\n            Incoming Trucks\r\n          </button>\r\n          <button\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: activeTab === 'outgoing' ? '#007bff' : '#ccc',\r\n              color: '#fff',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n            }}\r\n            onClick={() => setActiveTab('outgoing')}\r\n          >\r\n            Outgoing Trucks\r\n          </button>\r\n        </div>\r\n\r\n        {error ? (\r\n          <p style={{ color: 'red' }}>Error: {error}</p>\r\n        ) : (\r\n          <table border=\"1\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Truck ID</th>\r\n                <th>Name</th>\r\n                <th>Current Location</th>\r\n                <th>Destination</th>\r\n                <th>Current Location Name</th>\r\n                <th>Destination Name</th>\r\n                <th>Status</th>\r\n                <th>Current Weight (kg)</th>\r\n                <th>Filled Capacity (%)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {trucks.length > 0 ? (\r\n                trucks.map((truck) => (\r\n                  <tr\r\n                    key={truck.truck_id}\r\n                    onClick={() => handleTruckClick(truck)} // Handle truck click\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    <td>{truck.truck_id}</td>\r\n                    <td>{truck.name}</td>\r\n                    <td>{truck.current_location}</td>\r\n                    <td>{truck.current_destination}</td>\r\n                    <td>{truck.current_location_name}</td>\r\n                    <td>{truck.current_destination_name}</td>\r\n                    <td>{truck.truck_status}</td>\r\n                    <td>{truck.current_weight}</td>\r\n                    <td>{truck.filled_capacity.toFixed(2)}%</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"9\" style={{ textAlign: 'center' }}>\r\n                    No {activeTab === 'incoming' ? 'incoming' : 'outgoing'} trucks found.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n      {/* Map Container */}\r\n      <div\r\n        id=\"map\"\r\n        style={{\r\n          flex: 1,\r\n          height: '100vh',\r\n          borderLeft: '1px solid #ccc',\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WarehouseDashboard ;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}