{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\ManageCredentials.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"../components/ui/card.tsx\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../components/ui/select.tsx\";\nimport { Alert, AlertDescription } from \"../components/ui/alert\";\nimport { Button } from \"../components/ui/Button.jsx\";\nimport { Checkbox } from \"../components/ui/checkbox\";\nimport { Badge } from \"../components/ui/badge.jsx\";\nimport { Loader2 } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageCredentials = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [warehouses, setWarehouses] = useState([]);\n  const [filteredWarehouses, setFilteredWarehouses] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedWarehouses, setSelectedWarehouses] = useState([]);\n  const [isFetchingUsers, setIsFetchingUsers] = useState(false);\n  const [isFetchingWarehouses, setIsFetchingWarehouses] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Fetch users from the API\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setIsFetchingUsers(true);\n      try {\n        const response = await fetch('https://e47e-203-192-227-35.ngrok-free.app/api/getAllUsers', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(null)\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch users: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        console.log('Fetched users:', data);\n        let usersData = [];\n        if (Array.isArray(data)) {\n          usersData = data.map(user => ({\n            ...user,\n            username: user['username ']\n          }));\n        } else if (data.users && Array.isArray(data.users)) {\n          usersData = data.users.map(user => ({\n            ...user,\n            username: user['username ']\n          }));\n        } else {\n          throw new Error('Unexpected data format for users.');\n        }\n        setUsers(usersData);\n      } catch (err) {\n        setError(`Error fetching users: ${err.message}`);\n        console.error(err);\n      } finally {\n        setIsFetchingUsers(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Fetch warehouses from the API\n  useEffect(() => {\n    const fetchWarehouses = async () => {\n      setIsFetchingWarehouses(true);\n      try {\n        const response = await fetch('https://e47e-203-192-227-35.ngrok-free.app/api/getAllWarehouseNames', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch warehouses: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        console.log('Fetched warehouses:', data);\n\n        // Map warehouse data into the desired format\n        let warehousesData = [];\n        if (Array.isArray(data.warehouse_names)) {\n          warehousesData = data.warehouse_names.map((name, index) => ({\n            id: data.warehouse_ids[index],\n            // Assuming both arrays are in sync\n            name: name\n          }));\n        } else {\n          throw new Error('Unexpected data format for warehouses.');\n        }\n        setWarehouses(warehousesData);\n        setFilteredWarehouses(warehousesData); // Initially set filtered warehouses to all warehouses\n      } catch (err) {\n        setError(`Error fetching warehouses: ${err.message}`);\n        console.error(err);\n      } finally {\n        setIsFetchingWarehouses(false);\n      }\n    };\n    fetchWarehouses();\n  }, []);\n\n  // Filter warehouses based on search query\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n    const filtered = warehouses.filter(warehouse => warehouse.name.toLowerCase().includes(event.target.value.toLowerCase()));\n    setFilteredWarehouses(filtered);\n  };\n\n  // Handle warehouse checkbox changes\n  const handleWarehouseChange = warehouseId => {\n    setSelectedWarehouses(prevSelected => {\n      if (prevSelected.includes(warehouseId)) {\n        return prevSelected.filter(id => id !== warehouseId);\n      }\n      return [...prevSelected, warehouseId];\n    });\n  };\n\n  // Handle user selection\n  const handleUserChange = value => {\n    const selected = users.find(user => user.id === parseInt(value));\n    setSelectedUser(selected);\n    if (selected) {\n      const warehousesAccess = selected.warehouse_access ? selected.warehouse_access.split(',').map(id => parseInt(id)) : [];\n      setSelectedWarehouses(warehousesAccess);\n    } else {\n      setSelectedWarehouses([]);\n    }\n  };\n\n  // Handle form submission\n  const handleAssignWarehouses = async () => {\n    if (!selectedUser) {\n      setError('Please select a user');\n      return;\n    }\n\n    // Convert selected warehouses to a comma-separated string\n    const warehouseIds = selectedWarehouses.join(',');\n    console.log('Selected warehouses:', warehouseIds); // For debugging\n\n    try {\n      const response = await fetch('https://e47e-203-192-227-35.ngrok-free.app/api/setWarehousePermission', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: selectedUser.username,\n          warehouseIds: warehouseIds // Send as a comma-separated string\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to assign warehouses: ${response.status} ${response.statusText}`);\n      }\n      setSuccess('Warehouses assigned successfully!');\n      setError(null);\n    } catch (err) {\n      setError(`Error assigning warehouses: ${err.message}`);\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"bg-white shadow-lg rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \"border-b-2 border-gray-100 p-4\",\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-2xl font-semibold text-gray-800\",\n          children: \"Manage Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: [(isFetchingUsers || isFetchingWarehouses) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center space-x-2 mb-4 animate-pulse\",\n          children: [/*#__PURE__*/_jsxDEV(Loader2, {\n            className: \"h-5 w-5 text-blue-600 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500\",\n            children: isFetchingUsers ? 'Loading users...' : 'Loading warehouses...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"destructive\",\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"mb-4 bg-green-100 text-green-800 border-green-300\",\n          children: /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Select User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onValueChange: handleUserChange,\n              disabled: isFetchingUsers,\n              children: [/*#__PURE__*/_jsxDEV(SelectTrigger, {\n                className: \"w-full border rounded-md py-2 px-4 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n                children: /*#__PURE__*/_jsxDEV(SelectValue, {\n                  placeholder: \"Select a user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SelectContent, {\n                children: Array.isArray(users) && users.map(user => {\n                  if (!user.id) return null;\n                  return /*#__PURE__*/_jsxDEV(SelectItem, {\n                    value: user.id.toString(),\n                    className: \"py-2 px-4 hover:bg-gray-200\",\n                    children: user.username\n                  }, user.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: selectedUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                variant: \"secondary\",\n                children: selectedUser.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm font-medium text-gray-700\",\n                children: \"Assign Warehouses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"w-full p-2 border rounded-md text-sm text-gray-700\",\n                  placeholder: \"Search for a warehouse...\",\n                  value: searchQuery,\n                  onChange: handleSearchChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 gap-4\",\n                children: filteredWarehouses.map(warehouse => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center space-x-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: selectedWarehouses.includes(warehouse.id),\n                    onCheckedChange: () => handleWarehouseChange(warehouse.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm text-gray-800\",\n                    children: warehouse.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this)]\n                }, warehouse.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-end space-x-4 mt-6\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleAssignWarehouses,\n                disabled: isFetchingUsers || isFetchingWarehouses,\n                children: \"Assign Warehouses\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline\",\n                onClick: () => setSelectedUser(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageCredentials, \"MYo2YZZwKQp+UUBF4dMHxOSJuS0=\");\n_c = ManageCredentials;\nexport default ManageCredentials;\nvar _c;\n$RefreshReg$(_c, \"ManageCredentials\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","CardHeader","CardTitle","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Alert","AlertDescription","Button","Checkbox","Badge","Loader2","jsxDEV","_jsxDEV","ManageCredentials","_s","users","setUsers","warehouses","setWarehouses","filteredWarehouses","setFilteredWarehouses","selectedUser","setSelectedUser","selectedWarehouses","setSelectedWarehouses","isFetchingUsers","setIsFetchingUsers","isFetchingWarehouses","setIsFetchingWarehouses","error","setError","success","setSuccess","searchQuery","setSearchQuery","fetchUsers","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","statusText","data","json","console","log","usersData","Array","isArray","map","user","username","err","message","fetchWarehouses","warehousesData","warehouse_names","name","index","id","warehouse_ids","handleSearchChange","event","target","value","filtered","filter","warehouse","toLowerCase","includes","handleWarehouseChange","warehouseId","prevSelected","handleUserChange","selected","find","parseInt","warehousesAccess","warehouse_access","split","handleAssignWarehouses","warehouseIds","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onValueChange","disabled","placeholder","toString","role","type","onChange","checked","onCheckedChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/ManageCredentials.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"../components/ui/card.tsx\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"../components/ui/select.tsx\";\r\nimport { Alert, AlertDescription } from \"../components/ui/alert\";\r\nimport {Button}  from \"../components/ui/Button.jsx\";\r\nimport  {Checkbox}  from \"../components/ui/checkbox\";\r\nimport {Badge}  from \"../components/ui/badge.jsx\";\r\nimport { Loader2 } from \"lucide-react\";\r\n\r\nconst ManageCredentials = () => {\r\n  const [users, setUsers] = useState([]); \r\n  const [warehouses, setWarehouses] = useState([]);\r\n  const [filteredWarehouses, setFilteredWarehouses] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [selectedWarehouses, setSelectedWarehouses] = useState([]);\r\n  const [isFetchingUsers, setIsFetchingUsers] = useState(false);\r\n  const [isFetchingWarehouses, setIsFetchingWarehouses] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  // Fetch users from the API\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      setIsFetchingUsers(true);\r\n      try {\r\n        const response = await fetch('https://e47e-203-192-227-35.ngrok-free.app/api/getAllUsers', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(null),\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch users: ${response.status} ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log('Fetched users:', data);\r\n\r\n        let usersData = [];\r\n        if (Array.isArray(data)) {\r\n          usersData = data.map(user => ({\r\n            ...user,\r\n            username: user['username '], \r\n          }));\r\n        } else if (data.users && Array.isArray(data.users)) {\r\n          usersData = data.users.map(user => ({\r\n            ...user,\r\n            username: user['username '], \r\n          }));\r\n        } else {\r\n          throw new Error('Unexpected data format for users.');\r\n        }\r\n\r\n        setUsers(usersData);\r\n      } catch (err) {\r\n        setError(`Error fetching users: ${err.message}`);\r\n        console.error(err);\r\n      } finally {\r\n        setIsFetchingUsers(false);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch warehouses from the API\r\n  useEffect(() => {\r\n    const fetchWarehouses = async () => {\r\n      setIsFetchingWarehouses(true);\r\n      try {\r\n        const response = await fetch('https://e47e-203-192-227-35.ngrok-free.app/api/getAllWarehouseNames', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch warehouses: ${response.status} ${response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log('Fetched warehouses:', data);\r\n\r\n        // Map warehouse data into the desired format\r\n        let warehousesData = [];\r\n        if (Array.isArray(data.warehouse_names)) {\r\n          warehousesData = data.warehouse_names.map((name, index) => ({\r\n            id: data.warehouse_ids[index],  // Assuming both arrays are in sync\r\n            name: name,\r\n          }));\r\n        } else {\r\n          throw new Error('Unexpected data format for warehouses.');\r\n        }\r\n\r\n        setWarehouses(warehousesData);\r\n        setFilteredWarehouses(warehousesData);  // Initially set filtered warehouses to all warehouses\r\n      } catch (err) {\r\n        setError(`Error fetching warehouses: ${err.message}`);\r\n        console.error(err);\r\n      } finally {\r\n        setIsFetchingWarehouses(false);\r\n      }\r\n    };\r\n    fetchWarehouses();\r\n  }, []);\r\n\r\n  // Filter warehouses based on search query\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n    const filtered = warehouses.filter(warehouse =>\r\n      warehouse.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n    );\r\n    setFilteredWarehouses(filtered);\r\n  };\r\n\r\n  // Handle warehouse checkbox changes\r\n  const handleWarehouseChange = (warehouseId) => {\r\n    setSelectedWarehouses((prevSelected) => {\r\n      if (prevSelected.includes(warehouseId)) {\r\n        return prevSelected.filter(id => id !== warehouseId);\r\n      }\r\n      return [...prevSelected, warehouseId];\r\n    });\r\n  };\r\n\r\n  // Handle user selection\r\n  const handleUserChange = (value) => {\r\n    const selected = users.find(user => user.id === parseInt(value));\r\n    setSelectedUser(selected);\r\n    if (selected) {\r\n      const warehousesAccess = selected.warehouse_access\r\n        ? selected.warehouse_access.split(',').map(id => parseInt(id))\r\n        : [];\r\n      setSelectedWarehouses(warehousesAccess);\r\n    } else {\r\n      setSelectedWarehouses([]);\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleAssignWarehouses = async () => {\r\n    if (!selectedUser) {\r\n      setError('Please select a user');\r\n      return;\r\n    }\r\n\r\n    // Convert selected warehouses to a comma-separated string\r\n    const warehouseIds = selectedWarehouses.join(',');\r\n\r\n    console.log('Selected warehouses:', warehouseIds); // For debugging\r\n\r\n    try {\r\n      const response = await fetch('https://e47e-203-192-227-35.ngrok-free.app/api/setWarehousePermission', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          username: selectedUser.username,\r\n          warehouseIds: warehouseIds, // Send as a comma-separated string\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to assign warehouses: ${response.status} ${response.statusText}`);\r\n      }\r\n\r\n      setSuccess('Warehouses assigned successfully!');\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(`Error assigning warehouses: ${err.message}`);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6\">\r\n      <Card className=\"bg-white shadow-lg rounded-lg\">\r\n        <CardHeader className=\"border-b-2 border-gray-100 p-4\">\r\n          <CardTitle className=\"text-2xl font-semibold text-gray-800\">Manage Users</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"p-6\">\r\n          {(isFetchingUsers || isFetchingWarehouses) && (\r\n            <div className=\"flex items-center justify-center space-x-2 mb-4 animate-pulse\">\r\n              <Loader2 className=\"h-5 w-5 text-blue-600 animate-spin\" />\r\n              <span className=\"text-sm text-gray-500\">\r\n                {isFetchingUsers ? 'Loading users...' : 'Loading warehouses...'}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <Alert variant=\"destructive\" className=\"mb-4\">\r\n              <AlertDescription>{error}</AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          {success && (\r\n            <Alert className=\"mb-4 bg-green-100 text-green-800 border-green-300\">\r\n              <AlertDescription>{success}</AlertDescription>\r\n            </Alert>\r\n          )}\r\n\r\n          <div className=\"space-y-6\">\r\n            <div className=\"space-y-2\">\r\n              <label className=\"text-sm font-medium text-gray-700\">Select User</label>\r\n              <Select onValueChange={handleUserChange} disabled={isFetchingUsers}>\r\n                <SelectTrigger className=\"w-full border rounded-md py-2 px-4 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\">\r\n                  <SelectValue placeholder=\"Select a user\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  {Array.isArray(users) && users.map(user => {\r\n                    if (!user.id) return null;\r\n                    return (\r\n                      <SelectItem key={user.id} value={user.id.toString()} className=\"py-2 px-4 hover:bg-gray-200\">\r\n                        {user.username}\r\n                      </SelectItem>\r\n                    );\r\n                  })}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n\r\n            {selectedUser && (\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-800\">{selectedUser.username}</h3>\r\n                  <Badge variant=\"secondary\">{selectedUser.role}</Badge>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <label className=\"text-sm font-medium text-gray-700\">Assign Warehouses</label>\r\n\r\n                  {/* Search input for warehouses */}\r\n                  <div className=\"mb-4\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"w-full p-2 border rounded-md text-sm text-gray-700\"\r\n                      placeholder=\"Search for a warehouse...\"\r\n                      value={searchQuery}\r\n                      onChange={handleSearchChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    {filteredWarehouses.map((warehouse) => (\r\n                      <div key={warehouse.id} className=\"flex items-center space-x-2\">\r\n                        <Checkbox\r\n                          checked={selectedWarehouses.includes(warehouse.id)}\r\n                          onCheckedChange={() => handleWarehouseChange(warehouse.id)}\r\n                        />\r\n                        <span className=\"text-sm text-gray-800\">{warehouse.name}</span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex justify-end space-x-4 mt-6\">\r\n                  <Button onClick={handleAssignWarehouses} disabled={isFetchingUsers || isFetchingWarehouses}>\r\n                    Assign Warehouses\r\n                  </Button>\r\n                  <Button variant=\"outline\" onClick={() => setSelectedUser(null)}>\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageCredentials;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}