{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\Reports.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Truck, AlertTriangle, CheckCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  const [trucks, setTrucks] = useState([]);\n  const [reportData, setReportData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    // Initial fetch and periodic updates\n    fetchTrucks();\n    const intervalId = setInterval(() => {\n      fetchTrucks();\n    }, 15000); // Adjust interval as needed\n\n    // Cleanup function\n    return () => clearInterval(intervalId);\n  }, []);\n  const fetchTrucks = async () => {\n    if (isFetching) return; // Prevent overlapping requests\n\n    setIsFetching(true);\n    setLoading(true); // Ensure loading state is shown during fetch\n    setError(null); // Clear previous errors\n\n    try {\n      const response = await fetch('http://localhost:8000/api/devices', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          key: 'value'\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch trucks');\n      const data = await response.json();\n      setTrucks(data || []);\n      await fetchTruckDetails(data || []);\n    } catch (error) {\n      console.error('Error fetching trucks:', error);\n      setError(error.message);\n    } finally {\n      setIsFetching(false);\n      setLoading(false); // Ensure loading ends even if an error occurs\n    }\n  };\n  const fetchTruckDetails = async trucks => {\n    try {\n      const details = await Promise.all(trucks.map(async truck => {\n        try {\n          var _capacity$incoming_tr;\n          const [capacity, status, location] = await Promise.all([getTruckCapacity(truck.uniqueId), getTruckStatus(truck.uniqueId), getTruckLocation(truck.uniqueId)]);\n          const filledCapacity = ((_capacity$incoming_tr = capacity.incoming_trucks) === null || _capacity$incoming_tr === void 0 ? void 0 : _capacity$incoming_tr.length) > 0 ? Math.round(capacity.incoming_trucks[0].filled_capacity * 100) / 100 : null;\n          return {\n            truckId: truck.uniqueId,\n            name: truck.name || `Truck ${truck.uniqueId}`,\n            capacityUtilization: filledCapacity,\n            currentStatus: status.status || 'Unknown',\n            atWarehouse: status.at_warehouse || false,\n            onRoute: status.on_route || false,\n            currentLocation: location.current_location_name || 'Unknown',\n            currentDestination: location.current_destination_name || 'Not Set',\n            lastUpdated: status.lastUpdated || new Date().toISOString()\n          };\n        } catch (err) {\n          console.error(`Error fetching details for truck ${truck.uniqueId}:`, err);\n          return null; // Skip this truck if it fails\n        }\n      }));\n      setReportData(details.filter(detail => detail !== null)); // Filter out failed entries\n    } catch (error) {\n      console.error('Error fetching truck details:', error);\n      setError('Failed to fetch truck details');\n    }\n  };\n  const getTruckCapacity = async uniqueId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/getTruckCapacity?truckId=${uniqueId}`);\n      if (!response.ok) throw new Error('Failed to fetch truck capacity');\n      return await response.json();\n    } catch (error) {\n      console.error(`Error fetching capacity for truck ${uniqueId}:`, error);\n      return {};\n    }\n  };\n  const getTruckStatus = async uniqueId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/getTruckStatus?uniqueId=${uniqueId}`);\n      if (!response.ok) throw new Error('Failed to fetch truck status');\n      return await response.json();\n    } catch (error) {\n      console.error(`Error fetching status for truck ${uniqueId}:`, error);\n      return {};\n    }\n  };\n  const getTruckLocation = async uniqueId => {\n    try {\n      const response = await fetch('http://localhost:8000/api/getTruckLocation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          truck_id: uniqueId\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch truck location');\n      return await response.json();\n    } catch (error) {\n      console.error(`Error fetching location for truck ${uniqueId}:`, error);\n      return {};\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-900/20 border border-red-900 text-red-500 px-4 py-3 rounded-lg flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          className: \"h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-6 my-6 bg-gray-900 rounded-lg shadow-xl text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-b border-gray-800 p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Truck, {\n          className: \"h-6 w-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), \"Fleet Status Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: reportData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-left border-b border-gray-800\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-gray-400 font-medium\",\n              children: \"Truck Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-gray-400 font-medium\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-gray-400 font-medium\",\n              children: \"Capacity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-gray-400 font-medium\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-6 py-3 text-gray-400 font-medium\",\n              children: \"Route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: reportData.map(report => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: report.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: report.currentStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: [report.capacityUtilization || 'N/A', \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: report.currentLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"px-6 py-4\",\n              children: report.currentDestination\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, report.truckId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-gray-400\",\n        children: \"No truck data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"vNPsaQFPxJBcCxkYQKlFApc6zzs=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","Truck","AlertTriangle","CheckCircle","jsxDEV","_jsxDEV","Reports","_s","trucks","setTrucks","reportData","setReportData","loading","setLoading","error","setError","isFetching","setIsFetching","fetchTrucks","intervalId","setInterval","clearInterval","response","fetch","method","headers","body","JSON","stringify","key","ok","Error","data","json","fetchTruckDetails","console","message","details","Promise","all","map","truck","_capacity$incoming_tr","capacity","status","location","getTruckCapacity","uniqueId","getTruckStatus","getTruckLocation","filledCapacity","incoming_trucks","length","Math","round","filled_capacity","truckId","name","capacityUtilization","currentStatus","atWarehouse","at_warehouse","onRoute","on_route","currentLocation","current_location_name","currentDestination","current_destination_name","lastUpdated","Date","toISOString","err","filter","detail","truck_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","report","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/Reports.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Truck, AlertTriangle, CheckCircle } from 'lucide-react';\r\n\r\nconst Reports = () => {\r\n  const [trucks, setTrucks] = useState([]);\r\n  const [reportData, setReportData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Initial fetch and periodic updates\r\n    fetchTrucks();\r\n\r\n    const intervalId = setInterval(() => {\r\n      fetchTrucks();\r\n    }, 15000); // Adjust interval as needed\r\n\r\n    // Cleanup function\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const fetchTrucks = async () => {\r\n    if (isFetching) return; // Prevent overlapping requests\r\n\r\n    setIsFetching(true);\r\n    setLoading(true); // Ensure loading state is shown during fetch\r\n    setError(null); // Clear previous errors\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/devices', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ key: 'value' }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to fetch trucks');\r\n\r\n      const data = await response.json();\r\n      setTrucks(data || []);\r\n      await fetchTruckDetails(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching trucks:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setIsFetching(false);\r\n      setLoading(false); // Ensure loading ends even if an error occurs\r\n    }\r\n  };\r\n\r\n  const fetchTruckDetails = async (trucks) => {\r\n    try {\r\n      const details = await Promise.all(\r\n        trucks.map(async (truck) => {\r\n          try {\r\n            const [capacity, status, location] = await Promise.all([\r\n              getTruckCapacity(truck.uniqueId),\r\n              getTruckStatus(truck.uniqueId),\r\n              getTruckLocation(truck.uniqueId),\r\n            ]);\r\n\r\n            const filledCapacity =\r\n              capacity.incoming_trucks?.length > 0\r\n                ? Math.round(capacity.incoming_trucks[0].filled_capacity * 100) / 100\r\n                : null;\r\n\r\n            return {\r\n              truckId: truck.uniqueId,\r\n              name: truck.name || `Truck ${truck.uniqueId}`,\r\n              capacityUtilization: filledCapacity,\r\n              currentStatus: status.status || 'Unknown',\r\n              atWarehouse: status.at_warehouse || false,\r\n              onRoute: status.on_route || false,\r\n              currentLocation: location.current_location_name || 'Unknown',\r\n              currentDestination: location.current_destination_name || 'Not Set',\r\n              lastUpdated: status.lastUpdated || new Date().toISOString(),\r\n            };\r\n          } catch (err) {\r\n            console.error(`Error fetching details for truck ${truck.uniqueId}:`, err);\r\n            return null; // Skip this truck if it fails\r\n          }\r\n        })\r\n      );\r\n\r\n      setReportData(details.filter((detail) => detail !== null)); // Filter out failed entries\r\n    } catch (error) {\r\n      console.error('Error fetching truck details:', error);\r\n      setError('Failed to fetch truck details');\r\n    }\r\n  };\r\n\r\n  const getTruckCapacity = async (uniqueId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/getTruckCapacity?truckId=${uniqueId}`);\r\n      if (!response.ok) throw new Error('Failed to fetch truck capacity');\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`Error fetching capacity for truck ${uniqueId}:`, error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const getTruckStatus = async (uniqueId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/getTruckStatus?uniqueId=${uniqueId}`);\r\n      if (!response.ok) throw new Error('Failed to fetch truck status');\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`Error fetching status for truck ${uniqueId}:`, error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const getTruckLocation = async (uniqueId) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/getTruckLocation', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ truck_id: uniqueId }),\r\n      });\r\n      if (!response.ok) throw new Error('Failed to fetch truck location');\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`Error fetching location for truck ${uniqueId}:`, error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <div className=\"bg-red-900/20 border border-red-900 text-red-500 px-4 py-3 rounded-lg flex items-center gap-2\">\r\n          <AlertTriangle className=\"h-4 w-4\" />\r\n          <p>{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"mx-6 my-6 bg-gray-900 rounded-lg shadow-xl text-white\">\r\n      <div className=\"border-b border-gray-800 p-6\">\r\n        <h2 className=\"text-2xl font-bold flex items-center gap-2\">\r\n          <Truck className=\"h-6 w-6\" />\r\n          Fleet Status Dashboard\r\n        </h2>\r\n      </div>\r\n      <div className=\"p-6\">\r\n        {reportData.length > 0 ? (\r\n          <table className=\"w-full\">\r\n            <thead>\r\n              <tr className=\"text-left border-b border-gray-800\">\r\n                <th className=\"px-6 py-3 text-gray-400 font-medium\">Truck Info</th>\r\n                <th className=\"px-6 py-3 text-gray-400 font-medium\">Status</th>\r\n                <th className=\"px-6 py-3 text-gray-400 font-medium\">Capacity</th>\r\n                <th className=\"px-6 py-3 text-gray-400 font-medium\">Location</th>\r\n                <th className=\"px-6 py-3 text-gray-400 font-medium\">Route</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {reportData.map((report) => (\r\n                <tr key={report.truckId}>\r\n                  <td className=\"px-6 py-4\">{report.name}</td>\r\n                  <td className=\"px-6 py-4\">{report.currentStatus}</td>\r\n                  <td className=\"px-6 py-4\">{report.capacityUtilization || 'N/A'}%</td>\r\n                  <td className=\"px-6 py-4\">{report.currentLocation}</td>\r\n                  <td className=\"px-6 py-4\">{report.currentDestination}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p className=\"text-center text-gray-400\">No truck data available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}