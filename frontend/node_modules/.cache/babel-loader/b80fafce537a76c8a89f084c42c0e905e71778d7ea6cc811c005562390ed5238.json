{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\DynamicRouteMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix for default marker icons in Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst DynamicRouteMap = () => {\n  _s();\n  var _routeData$route_deta, _routeData$route_deta2;\n  const [routeData, setRouteData] = useState(null);\n  const [warehouseData, setWarehouseData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [map, setMap] = useState(null);\n  const [selectedTruck, setSelectedTruck] = useState('');\n  const [trucks, setTrucks] = useState([]);\n\n  // Define route colors for different segments\n  const routeColors = ['#FF5733',\n  // Orange-red\n  '#33FF57',\n  // Bright green\n  '#3357FF',\n  // Blue\n  '#FF33F6',\n  // Pink\n  '#33FFF6' // Cyan\n  ];\n\n  // Fetch trucks on component mount\n  useEffect(() => {\n    const fetchTrucks = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/devices', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            key: 'value'\n          })\n        });\n        if (!response.ok) throw new Error('Failed to fetch trucks');\n        const data = await response.json();\n        setTrucks(data || []);\n        if (data && data.length > 0) {\n          setSelectedTruck(data[0].uniqueId); // Select first truck by default\n        }\n      } catch (error) {\n        console.error('Error fetching trucks:', error);\n        setError('Failed to load trucks');\n      }\n    };\n    fetchTrucks();\n  }, []);\n\n  // Fetch warehouse data when truck is selected\n  useEffect(() => {\n    const fetchWarehouseData = async () => {\n      if (!selectedTruck) return;\n      try {\n        setLoading(true);\n        const response = await fetch(`http://localhost:8000/api/devices/geofences?uniqueId=${selectedTruck}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch warehouse data');\n        }\n        const data = await response.json();\n        setWarehouseData(data);\n\n        // Now fetch the route data with the new warehouse data\n        await fetchRouteData(data);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchWarehouseData();\n  }, [selectedTruck]);\n\n  // Separate function to fetch route data\n  const fetchRouteData = async warehouses => {\n    try {\n      const response = await fetch('http://localhost:8000/api/dynamicRoute', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(warehouses)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch route data');\n      }\n      const data = await response.json();\n      setRouteData(data);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n  const handleTruckChange = e => {\n    setSelectedTruck(e.target.value);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: \"Loading map data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Center the map on the first warehouse if available\n  const center = warehouseData.length > 0 ? [warehouseData[0].lat, warehouseData[0].lng] : [18.5204, 73.8554]; // Default center\n\n  // Create route lines from the coordinates with different colors\n  const routeLines = routeData === null || routeData === void 0 ? void 0 : (_routeData$route_deta = routeData.route_details) === null || _routeData$route_deta === void 0 ? void 0 : _routeData$route_deta.map((segment, index) => {\n    const segmentCoords = routeData.route_coordinates.filter(point => point.warehouse_id === segment.from_id || point.warehouse_id === segment.to_id).map(point => point.coordinate);\n    return /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: segmentCoords,\n      color: routeColors[index % routeColors.length],\n      weight: 4,\n      opacity: 0.8\n    }, `route-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  });\n\n  // Custom marker icon\n  const warehouseIcon = new L.Icon({\n    iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n    shadowSize: [41, 41]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-full relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 left-4 z-[1000] bg-white p-4 rounded-lg shadow-lg min-w-[200px]\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: [\"Select Truck\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedTruck,\n          onChange: handleTruckChange,\n          className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Choose a truck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), trucks.map(truck => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: truck.uniqueId,\n            children: truck.name ? `${truck.name} (${truck.uniqueId})` : `Truck ${truck.uniqueId}`\n          }, truck.uniqueId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: 12,\n      className: \"h-full w-full\",\n      whenCreated: setMap,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors \\xA9 <a href=\\\"https://carto.com/attributions\\\">CARTO</a>\",\n        maxZoom: 19\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), warehouseData.map(warehouse => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [warehouse.lat, warehouse.lng],\n        icon: warehouseIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-lg mb-2\",\n              children: warehouse.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm\",\n              children: [\"Load: \", warehouse.load, \" units\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm\",\n              children: [\"Unload: \", warehouse.unload, \" units\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm\",\n              children: [\"Processing: \", warehouse.processingTime, \" min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, warehouse.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)), routeLines]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 right-4 bg-white p-4 rounded-lg shadow-lg z-[1000]\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-bold mb-2\",\n        children: \"Route Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), routeData === null || routeData === void 0 ? void 0 : (_routeData$route_deta2 = routeData.route_details) === null || _routeData$route_deta2 === void 0 ? void 0 : _routeData$route_deta2.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 mr-2\",\n          style: {\n            backgroundColor: routeColors[index % routeColors.length]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: [segment.from_name, \" \\u2192 \", segment.to_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, `legend-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicRouteMap, \"mno5OCqqeoo6p3wc2vEy4BiNYTM=\");\n_c = DynamicRouteMap;\nexport default DynamicRouteMap;\nvar _c;\n$RefreshReg$(_c, \"DynamicRouteMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","DynamicRouteMap","_s","_routeData$route_deta","_routeData$route_deta2","routeData","setRouteData","warehouseData","setWarehouseData","loading","setLoading","error","setError","map","setMap","selectedTruck","setSelectedTruck","trucks","setTrucks","routeColors","fetchTrucks","response","fetch","method","headers","body","JSON","stringify","key","ok","Error","data","json","length","uniqueId","console","fetchWarehouseData","fetchRouteData","err","message","warehouses","handleTruckChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","lat","lng","routeLines","route_details","segment","index","segmentCoords","route_coordinates","filter","point","warehouse_id","from_id","to_id","coordinate","positions","color","weight","opacity","warehouseIcon","iconSize","iconAnchor","popupAnchor","shadowSize","onChange","truck","name","zoom","whenCreated","url","attribution","maxZoom","warehouse","position","icon","load","unload","processingTime","id","style","backgroundColor","from_name","to_name","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/DynamicRouteMap.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n// Fix for default marker icons in Leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\nconst DynamicRouteMap = () => {\r\n  const [routeData, setRouteData] = useState(null);\r\n  const [warehouseData, setWarehouseData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [map, setMap] = useState(null);\r\n  const [selectedTruck, setSelectedTruck] = useState('');\r\n  const [trucks, setTrucks] = useState([]);\r\n\r\n  // Define route colors for different segments\r\n  const routeColors = [\r\n    '#FF5733', // Orange-red\r\n    '#33FF57', // Bright green\r\n    '#3357FF', // Blue\r\n    '#FF33F6', // Pink\r\n    '#33FFF6'  // Cyan\r\n  ];\r\n\r\n  // Fetch trucks on component mount\r\n  useEffect(() => {\r\n    const fetchTrucks = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/api/devices', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ key: 'value' })\r\n        });\r\n        \r\n        if (!response.ok) throw new Error('Failed to fetch trucks');\r\n        \r\n        const data = await response.json();\r\n        setTrucks(data || []);\r\n        if (data && data.length > 0) {\r\n          setSelectedTruck(data[0].uniqueId); // Select first truck by default\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching trucks:', error);\r\n        setError('Failed to load trucks');\r\n      }\r\n    };\r\n\r\n    fetchTrucks();\r\n  }, []);\r\n\r\n  // Fetch warehouse data when truck is selected\r\n  useEffect(() => {\r\n    const fetchWarehouseData = async () => {\r\n      if (!selectedTruck) return;\r\n      \r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`http://localhost:8000/api/devices/geofences?uniqueId=${selectedTruck}`);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch warehouse data');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setWarehouseData(data);\r\n        \r\n        // Now fetch the route data with the new warehouse data\r\n        await fetchRouteData(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchWarehouseData();\r\n  }, [selectedTruck]);\r\n\r\n  // Separate function to fetch route data\r\n  const fetchRouteData = async (warehouses) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/dynamicRoute', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(warehouses),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch route data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setRouteData(data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTruckChange = (e) => {\r\n    setSelectedTruck(e.target.value);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"flex items-center justify-center h-full\">Loading map data...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"flex items-center justify-center h-full text-red-500\">Error: {error}</div>;\r\n  }\r\n\r\n  // Center the map on the first warehouse if available\r\n  const center = warehouseData.length > 0 \r\n    ? [warehouseData[0].lat, warehouseData[0].lng]\r\n    : [18.5204, 73.8554]; // Default center\r\n\r\n  // Create route lines from the coordinates with different colors\r\n  const routeLines = routeData?.route_details?.map((segment, index) => {\r\n    const segmentCoords = routeData.route_coordinates\r\n      .filter(point => \r\n        (point.warehouse_id === segment.from_id || point.warehouse_id === segment.to_id))\r\n      .map(point => point.coordinate);\r\n    \r\n    return (\r\n      <Polyline\r\n        key={`route-${index}`}\r\n        positions={segmentCoords}\r\n        color={routeColors[index % routeColors.length]}\r\n        weight={4}\r\n        opacity={0.8}\r\n      />\r\n    );\r\n  });\r\n\r\n  // Custom marker icon\r\n  const warehouseIcon = new L.Icon({\r\n    iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n    shadowSize: [41, 41]\r\n  });\r\n\r\n  return (\r\n    <div className=\"h-screen w-full relative\">\r\n      {/* Truck selector dropdown */}\r\n      <div className=\"absolute top-4 left-4 z-[1000] bg-white p-4 rounded-lg shadow-lg min-w-[200px]\">\r\n        <label className=\"block text-sm font-medium mb-2\">\r\n          Select Truck\r\n          <select\r\n            value={selectedTruck}\r\n            onChange={handleTruckChange}\r\n            className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n          >\r\n            <option value=\"\">Choose a truck</option>\r\n            {trucks.map((truck) => (\r\n              <option key={truck.uniqueId} value={truck.uniqueId}>\r\n                {truck.name ? `${truck.name} (${truck.uniqueId})` : `Truck ${truck.uniqueId}`}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <MapContainer\r\n        center={center}\r\n        zoom={12}\r\n        className=\"h-full w-full\"\r\n        whenCreated={setMap}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\r\n          maxZoom={19}\r\n        />\r\n        \r\n        {/* Render warehouse markers */}\r\n        {warehouseData.map((warehouse) => (\r\n          <Marker\r\n            key={warehouse.id}\r\n            position={[warehouse.lat, warehouse.lng]}\r\n            icon={warehouseIcon}\r\n          >\r\n            <Popup>\r\n              <div className=\"p-2\">\r\n                <h3 className=\"font-bold text-lg mb-2\">{warehouse.name}</h3>\r\n                <p className=\"text-sm\">Load: {warehouse.load} units</p>\r\n                <p className=\"text-sm\">Unload: {warehouse.unload} units</p>\r\n                <p className=\"text-sm\">Processing: {warehouse.processingTime} min</p>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* Render route lines */}\r\n        {routeLines}\r\n      </MapContainer>\r\n\r\n      {/* Legend */}\r\n      <div className=\"absolute bottom-4 right-4 bg-white p-4 rounded-lg shadow-lg z-[1000]\">\r\n        <h4 className=\"font-bold mb-2\">Route Legend</h4>\r\n        {routeData?.route_details?.map((segment, index) => (\r\n          <div key={`legend-${index}`} className=\"flex items-center mb-1\">\r\n            <div \r\n              className=\"w-4 h-4 mr-2\" \r\n              style={{ backgroundColor: routeColors[index % routeColors.length] }}\r\n            ></div>\r\n            <span className=\"text-sm\">\r\n              {segment.from_name} → {segment.to_name}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicRouteMap;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAChF,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CN,CAAC,CAACG,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAE,gFAAgF;EAC/FC,OAAO,EAAE,6EAA6E;EACtFC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC6B,GAAG,EAAEC,MAAM,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMmC,WAAW,GAAG,CAClB,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS;EAAE;EACX,SAAS,CAAE;EAAA,CACZ;;EAED;EACApC,SAAS,CAAC,MAAM;IACd,MAAMqC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,GAAG,EAAE;UAAQ,CAAC;QACvC,CAAC,CAAC;QAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAE3D,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCd,SAAS,CAACa,IAAI,IAAI,EAAE,CAAC;QACrB,IAAIA,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UAC3BjB,gBAAgB,CAACe,IAAI,CAAC,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC;QACtC;MACF,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdwB,OAAO,CAACxB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CC,QAAQ,CAAC,uBAAuB,CAAC;MACnC;IACF,CAAC;IAEDQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArC,SAAS,CAAC,MAAM;IACd,MAAMqD,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI,CAACrB,aAAa,EAAE;MAEpB,IAAI;QACFL,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwDP,aAAa,EAAE,CAAC;QAErG,IAAI,CAACM,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QACnD;QAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCxB,gBAAgB,CAACuB,IAAI,CAAC;;QAEtB;QACA,MAAMM,cAAc,CAACN,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZ1B,QAAQ,CAAC0B,GAAG,CAACC,OAAO,CAAC;QACrB7B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED0B,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACrB,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMsB,cAAc,GAAG,MAAOG,UAAU,IAAK;IAC3C,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACa,UAAU;MACjC,CAAC,CAAC;MAEF,IAAI,CAACnB,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC1B,YAAY,CAACyB,IAAI,CAAC;MAClBrB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAO4B,GAAG,EAAE;MACZ1B,QAAQ,CAAC0B,GAAG,CAACC,OAAO,CAAC;MACrB7B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM+B,iBAAiB,GAAIC,CAAC,IAAK;IAC/B1B,gBAAgB,CAAC0B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,IAAInC,OAAO,EAAE;IACX,oBAAOjB,OAAA;MAAKqD,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3F;EAEA,IAAIvC,KAAK,EAAE;IACT,oBAAOnB,OAAA;MAAKqD,SAAS,EAAC,sDAAsD;MAAAC,QAAA,GAAC,SAAO,EAACnC,KAAK;IAAA;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACnG;;EAEA;EACA,MAAMC,MAAM,GAAG5C,aAAa,CAAC0B,MAAM,GAAG,CAAC,GACnC,CAAC1B,aAAa,CAAC,CAAC,CAAC,CAAC6C,GAAG,EAAE7C,aAAa,CAAC,CAAC,CAAC,CAAC8C,GAAG,CAAC,GAC5C,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;;EAExB;EACA,MAAMC,UAAU,GAAGjD,SAAS,aAATA,SAAS,wBAAAF,qBAAA,GAATE,SAAS,CAAEkD,aAAa,cAAApD,qBAAA,uBAAxBA,qBAAA,CAA0BU,GAAG,CAAC,CAAC2C,OAAO,EAAEC,KAAK,KAAK;IACnE,MAAMC,aAAa,GAAGrD,SAAS,CAACsD,iBAAiB,CAC9CC,MAAM,CAACC,KAAK,IACVA,KAAK,CAACC,YAAY,KAAKN,OAAO,CAACO,OAAO,IAAIF,KAAK,CAACC,YAAY,KAAKN,OAAO,CAACQ,KAAM,CAAC,CAClFnD,GAAG,CAACgD,KAAK,IAAIA,KAAK,CAACI,UAAU,CAAC;IAEjC,oBACEzE,OAAA,CAACH,QAAQ;MAEP6E,SAAS,EAAER,aAAc;MACzBS,KAAK,EAAEhD,WAAW,CAACsC,KAAK,GAAGtC,WAAW,CAACc,MAAM,CAAE;MAC/CmC,MAAM,EAAE,CAAE;MACVC,OAAO,EAAE;IAAI,GAJR,SAASZ,KAAK,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKtB,CAAC;EAEN,CAAC,CAAC;;EAEF;EACA,MAAMoB,aAAa,GAAG,IAAIhF,CAAC,CAACG,IAAI,CAAC;IAC/BM,OAAO,EAAE,6EAA6E;IACtFwE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACrBzE,SAAS,EAAE,+EAA+E;IAC1F0E,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;EACrB,CAAC,CAAC;EAEF,oBACElF,OAAA;IAAKqD,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAEvCtD,OAAA;MAAKqD,SAAS,EAAC,gFAAgF;MAAAC,QAAA,eAC7FtD,OAAA;QAAOqD,SAAS,EAAC,gCAAgC;QAAAC,QAAA,GAAC,cAEhD,eAAAtD,OAAA;UACEoD,KAAK,EAAE7B,aAAc;UACrB4D,QAAQ,EAAElC,iBAAkB;UAC5BI,SAAS,EAAC,sIAAsI;UAAAC,QAAA,gBAEhJtD,OAAA;YAAQoD,KAAK,EAAC,EAAE;YAAAE,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACvCjC,MAAM,CAACJ,GAAG,CAAE+D,KAAK,iBAChBpF,OAAA;YAA6BoD,KAAK,EAAEgC,KAAK,CAAC1C,QAAS;YAAAY,QAAA,EAChD8B,KAAK,CAACC,IAAI,GAAG,GAAGD,KAAK,CAACC,IAAI,KAAKD,KAAK,CAAC1C,QAAQ,GAAG,GAAG,SAAS0C,KAAK,CAAC1C,QAAQ;UAAE,GADlE0C,KAAK,CAAC1C,QAAQ;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEnB,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN1D,OAAA,CAACP,YAAY;MACXkE,MAAM,EAAEA,MAAO;MACf2B,IAAI,EAAE,EAAG;MACTjC,SAAS,EAAC,eAAe;MACzBkC,WAAW,EAAEjE,MAAO;MAAAgC,QAAA,gBAEpBtD,OAAA,CAACN,SAAS;QACR8F,GAAG,EAAC,gEAAgE;QACpEC,WAAW,EAAC,mJAAmJ;QAC/JC,OAAO,EAAE;MAAG;QAAAnC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,EAGD3C,aAAa,CAACM,GAAG,CAAEsE,SAAS,iBAC3B3F,OAAA,CAACL,MAAM;QAELiG,QAAQ,EAAE,CAACD,SAAS,CAAC/B,GAAG,EAAE+B,SAAS,CAAC9B,GAAG,CAAE;QACzCgC,IAAI,EAAEf,aAAc;QAAAxB,QAAA,eAEpBtD,OAAA,CAACJ,KAAK;UAAA0D,QAAA,eACJtD,OAAA;YAAKqD,SAAS,EAAC,KAAK;YAAAC,QAAA,gBAClBtD,OAAA;cAAIqD,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAEqC,SAAS,CAACN;YAAI;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5D1D,OAAA;cAAGqD,SAAS,EAAC,SAAS;cAAAC,QAAA,GAAC,QAAM,EAACqC,SAAS,CAACG,IAAI,EAAC,QAAM;YAAA;cAAAvC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvD1D,OAAA;cAAGqD,SAAS,EAAC,SAAS;cAAAC,QAAA,GAAC,UAAQ,EAACqC,SAAS,CAACI,MAAM,EAAC,QAAM;YAAA;cAAAxC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC3D1D,OAAA;cAAGqD,SAAS,EAAC,SAAS;cAAAC,QAAA,GAAC,cAAY,EAACqC,SAAS,CAACK,cAAc,EAAC,MAAI;YAAA;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC,GAXHiC,SAAS,CAACM,EAAE;QAAA1C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYX,CACT,CAAC,EAGDI,UAAU;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGf1D,OAAA;MAAKqD,SAAS,EAAC,sEAAsE;MAAAC,QAAA,gBACnFtD,OAAA;QAAIqD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC/C7C,SAAS,aAATA,SAAS,wBAAAD,sBAAA,GAATC,SAAS,CAAEkD,aAAa,cAAAnD,sBAAA,uBAAxBA,sBAAA,CAA0BS,GAAG,CAAC,CAAC2C,OAAO,EAAEC,KAAK,kBAC5CjE,OAAA;QAA6BqD,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBAC7DtD,OAAA;UACEqD,SAAS,EAAC,cAAc;UACxB6C,KAAK,EAAE;YAAEC,eAAe,EAAExE,WAAW,CAACsC,KAAK,GAAGtC,WAAW,CAACc,MAAM;UAAE;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACP1D,OAAA;UAAMqD,SAAS,EAAC,SAAS;UAAAC,QAAA,GACtBU,OAAO,CAACoC,SAAS,EAAC,UAAG,EAACpC,OAAO,CAACqC,OAAO;QAAA;UAAA9C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA,GAPC,UAAUO,KAAK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQtB,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChD,EAAA,CAtNID,eAAe;AAAA6F,EAAA,GAAf7F,eAAe;AAwNrB,eAAeA,eAAe;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}