{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\WarehouseDashboard .jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WarehouseDashboard = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('incoming'); // Tab state: 'incoming' or 'outgoing'\n  const [warehouseId, setWarehouseId] = useState(''); // User-specified warehouse ID\n  const [trucks, setTrucks] = useState([]);\n  const [error, setError] = useState(null);\n  const [map, setMap] = useState(null); // MapLibre instance\n\n  useEffect(() => {\n    if (!warehouseId) return;\n\n    // Determine the API endpoint based on the active tab and warehouseId\n    const endpoint = activeTab === 'incoming' ? `/api/getIncomingLiveTrucks?warehouseId=${warehouseId}` : `/api/getOutgoingTrucks?warehouseId=${warehouseId}`;\n\n    // Fetch data from the API\n    fetch(endpoint).then(response => {\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setTrucks(data.incomingTrucks || data.outgoing_trucks || []);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, [activeTab, warehouseId]); // Re-fetch data when the active tab or warehouseId changes\n\n  useEffect(() => {\n    // Initialize the MapLibre map\n    const mapInstance = new maplibregl.Map({\n      container: 'map',\n      // Container ID\n      style: 'https://demotiles.maplibre.org/style.json',\n      // Map style URL\n      center: [78.9629, 20.5937],\n      // Center of the map (India as an example)\n      zoom: 4\n    });\n\n    // Add controls to the map\n    const controlsContainer = document.createElement('div');\n    controlsContainer.style.position = 'absolute';\n    controlsContainer.style.top = '10px';\n    controlsContainer.style.left = '10px';\n    controlsContainer.style.backgroundColor = 'rgba(255, 255, 255, 0.9)';\n    controlsContainer.style.padding = '10px';\n    controlsContainer.style.borderRadius = '5px';\n    controlsContainer.style.boxShadow = '0 2px 4px rgba(0, 0, 0, 0.1)';\n\n    // Add input for warehouse ID\n    const warehouseInput = document.createElement('input');\n    warehouseInput.type = 'text';\n    warehouseInput.placeholder = 'Enter Warehouse ID';\n    warehouseInput.style.marginBottom = '10px';\n    warehouseInput.style.padding = '5px';\n    warehouseInput.value = warehouseId;\n    warehouseInput.addEventListener('input', e => {\n      setWarehouseId(e.target.value);\n    });\n    controlsContainer.appendChild(warehouseInput);\n\n    // Add buttons for tab navigation\n    const incomingButton = document.createElement('button');\n    incomingButton.innerText = 'Incoming Trucks';\n    incomingButton.style.marginRight = '5px';\n    incomingButton.style.padding = '10px';\n    incomingButton.style.backgroundColor = activeTab === 'incoming' ? '#007bff' : '#ccc';\n    incomingButton.style.color = '#fff';\n    incomingButton.style.border = 'none';\n    incomingButton.style.cursor = 'pointer';\n    incomingButton.addEventListener('click', () => setActiveTab('incoming'));\n    const outgoingButton = document.createElement('button');\n    outgoingButton.innerText = 'Outgoing Trucks';\n    outgoingButton.style.padding = '10px';\n    outgoingButton.style.backgroundColor = activeTab === 'outgoing' ? '#007bff' : '#ccc';\n    outgoingButton.style.color = '#fff';\n    outgoingButton.style.border = 'none';\n    outgoingButton.style.cursor = 'pointer';\n    outgoingButton.addEventListener('click', () => setActiveTab('outgoing'));\n    controlsContainer.appendChild(incomingButton);\n    controlsContainer.appendChild(outgoingButton);\n\n    // Add error message display\n    const errorDisplay = document.createElement('div');\n    errorDisplay.style.color = 'red';\n    errorDisplay.style.marginTop = '10px';\n    controlsContainer.appendChild(errorDisplay);\n\n    // Append controls to the map container\n    mapInstance.getContainer().appendChild(controlsContainer);\n    setMap(mapInstance);\n\n    // Cleanup map instance on component unmount\n    return () => {\n      mapInstance.remove();\n    };\n  }, [activeTab, warehouseId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '100vw',\n        height: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(WarehouseDashboard, \"cB5gh6rwKB4oK19cDieIkeAAC08=\");\n_c = WarehouseDashboard;\nexport default WarehouseDashboard;\nvar _c;\n$RefreshReg$(_c, \"WarehouseDashboard\");","map":{"version":3,"names":["React","useEffect","useState","maplibregl","jsxDEV","_jsxDEV","WarehouseDashboard","_s","activeTab","setActiveTab","warehouseId","setWarehouseId","trucks","setTrucks","error","setError","map","setMap","endpoint","fetch","then","response","ok","Error","status","json","data","incomingTrucks","outgoing_trucks","catch","err","message","mapInstance","Map","container","style","center","zoom","controlsContainer","document","createElement","position","top","left","backgroundColor","padding","borderRadius","boxShadow","warehouseInput","type","placeholder","marginBottom","value","addEventListener","e","target","appendChild","incomingButton","innerText","marginRight","color","border","cursor","outgoingButton","errorDisplay","marginTop","getContainer","remove","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/WarehouseDashboard .jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport maplibregl from 'maplibre-gl';\r\nimport 'maplibre-gl/dist/maplibre-gl.css';\r\n\r\nconst WarehouseDashboard = () => {\r\n  const [activeTab, setActiveTab] = useState('incoming'); // Tab state: 'incoming' or 'outgoing'\r\n  const [warehouseId, setWarehouseId] = useState(''); // User-specified warehouse ID\r\n  const [trucks, setTrucks] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [map, setMap] = useState(null); // MapLibre instance\r\n\r\n  useEffect(() => {\r\n    if (!warehouseId) return;\r\n\r\n    // Determine the API endpoint based on the active tab and warehouseId\r\n    const endpoint =\r\n      activeTab === 'incoming'\r\n        ? `/api/getIncomingLiveTrucks?warehouseId=${warehouseId}`\r\n        : `/api/getOutgoingTrucks?warehouseId=${warehouseId}`;\r\n\r\n    // Fetch data from the API\r\n    fetch(endpoint)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(`Error: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setTrucks(data.incomingTrucks || data.outgoing_trucks || []);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n      });\r\n  }, [activeTab, warehouseId]); // Re-fetch data when the active tab or warehouseId changes\r\n\r\n  useEffect(() => {\r\n    // Initialize the MapLibre map\r\n    const mapInstance = new maplibregl.Map({\r\n      container: 'map', // Container ID\r\n      style: 'https://demotiles.maplibre.org/style.json', // Map style URL\r\n      center: [78.9629, 20.5937], // Center of the map (India as an example)\r\n      zoom: 4,\r\n    });\r\n\r\n    // Add controls to the map\r\n    const controlsContainer = document.createElement('div');\r\n    controlsContainer.style.position = 'absolute';\r\n    controlsContainer.style.top = '10px';\r\n    controlsContainer.style.left = '10px';\r\n    controlsContainer.style.backgroundColor = 'rgba(255, 255, 255, 0.9)';\r\n    controlsContainer.style.padding = '10px';\r\n    controlsContainer.style.borderRadius = '5px';\r\n    controlsContainer.style.boxShadow = '0 2px 4px rgba(0, 0, 0, 0.1)';\r\n\r\n    // Add input for warehouse ID\r\n    const warehouseInput = document.createElement('input');\r\n    warehouseInput.type = 'text';\r\n    warehouseInput.placeholder = 'Enter Warehouse ID';\r\n    warehouseInput.style.marginBottom = '10px';\r\n    warehouseInput.style.padding = '5px';\r\n    warehouseInput.value = warehouseId;\r\n    warehouseInput.addEventListener('input', (e) => {\r\n      setWarehouseId(e.target.value);\r\n    });\r\n\r\n    controlsContainer.appendChild(warehouseInput);\r\n\r\n    // Add buttons for tab navigation\r\n    const incomingButton = document.createElement('button');\r\n    incomingButton.innerText = 'Incoming Trucks';\r\n    incomingButton.style.marginRight = '5px';\r\n    incomingButton.style.padding = '10px';\r\n    incomingButton.style.backgroundColor = activeTab === 'incoming' ? '#007bff' : '#ccc';\r\n    incomingButton.style.color = '#fff';\r\n    incomingButton.style.border = 'none';\r\n    incomingButton.style.cursor = 'pointer';\r\n    incomingButton.addEventListener('click', () => setActiveTab('incoming'));\r\n\r\n    const outgoingButton = document.createElement('button');\r\n    outgoingButton.innerText = 'Outgoing Trucks';\r\n    outgoingButton.style.padding = '10px';\r\n    outgoingButton.style.backgroundColor = activeTab === 'outgoing' ? '#007bff' : '#ccc';\r\n    outgoingButton.style.color = '#fff';\r\n    outgoingButton.style.border = 'none';\r\n    outgoingButton.style.cursor = 'pointer';\r\n    outgoingButton.addEventListener('click', () => setActiveTab('outgoing'));\r\n\r\n    controlsContainer.appendChild(incomingButton);\r\n    controlsContainer.appendChild(outgoingButton);\r\n\r\n    // Add error message display\r\n    const errorDisplay = document.createElement('div');\r\n    errorDisplay.style.color = 'red';\r\n    errorDisplay.style.marginTop = '10px';\r\n    controlsContainer.appendChild(errorDisplay);\r\n\r\n    // Append controls to the map container\r\n    mapInstance.getContainer().appendChild(controlsContainer);\r\n\r\n    setMap(mapInstance);\r\n\r\n    // Cleanup map instance on component unmount\r\n    return () => {\r\n      mapInstance.remove();\r\n    };\r\n  }, [activeTab, warehouseId]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        id=\"map\"\r\n        style={{\r\n          width: '100vw',\r\n          height: '100vh',\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WarehouseDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}