{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\TraccarMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport maplibregl from 'maplibre-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createCustomMarkerElement = zoom => {\n  const element = document.createElement('div');\n  element.className = 'custom-marker';\n\n  // Adjust the size based on zoom level\n  const size = zoom >= 14 ? 40 : 30;\n  element.style.width = `${size}px`;\n  element.style.height = `${size}px`;\n  element.style.backgroundImage = 'url(/media/truck_top_view.png)';\n  element.style.backgroundSize = 'cover';\n  element.style.backgroundPosition = 'center';\n  element.style.cursor = 'pointer';\n  return element;\n};\nconst createPopupContent = (position, deviceId, onReplayClick) => {\n  const div = document.createElement('div');\n  div.className = 'p-4';\n\n  // Get current time and yesterday\n  const now = new Date();\n  const yesterday = new Date(now - 24 * 60 * 60 * 1000);\n\n  // Format dates for display (local datetime-local format)\n  const nowFormatted = now.toISOString().slice(0, 16);\n  const yesterdayFormatted = yesterday.toISOString().slice(0, 16);\n  div.innerHTML = `\n    <div class=\"mb-4\">\n      <p class=\"mb-2\"><strong>Device ID:</strong> ${deviceId}</p>\n      <p class=\"mb-2\"><strong>Speed:</strong> ${(position.speed * 1.852).toFixed(1)} km/h</p>\n      <p class=\"mb-2\"><strong>Battery:</strong> ${position.attributes.batteryLevel}%</p>\n      <p class=\"mb-2\"><strong>Accuracy:</strong> ${position.accuracy.toFixed(1)}m</p>\n      <p class=\"mb-2\"><strong>Last Update:</strong> ${new Date(position.deviceTime).toLocaleString()}</p>\n    </div>\n    <div class=\"border-t pt-4\">\n      <div class=\"mb-3\">\n        <label class=\"block text-sm mb-1\">From:</label>\n        <input type=\"datetime-local\" id=\"fromDate-${deviceId}\" value=\"${yesterdayFormatted}\" class=\"w-full p-2 border rounded\"/>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"block text-sm mb-1\">To:</label>\n        <input type=\"datetime-local\" id=\"toDate-${deviceId}\" value=\"${nowFormatted}\" class=\"w-full p-2 border rounded\"/>\n      </div>\n      <button id=\"replayBtn-${deviceId}\" class=\"w-full bg-green-500 text-white p-2 rounded hover:bg-green-600\">\n        Show Path\n      </button>\n    </div>\n  `;\n\n  // Add event listener after the popup is added to DOM\n  setTimeout(() => {\n    const button = document.getElementById(`replayBtn-${deviceId}`);\n    if (button) {\n      button.addEventListener('click', () => {\n        const fromDateInput = document.getElementById(`fromDate-${deviceId}`).value;\n        const toDateInput = document.getElementById(`toDate-${deviceId}`).value;\n        const fromDate = new Date(fromDateInput).toISOString();\n        const toDate = new Date(toDateInput).toISOString();\n        onReplayClick(deviceId, fromDate, toDate);\n      });\n    }\n  }, 0);\n  return div;\n};\nconst TraccarMap = () => {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [markers, setMarkers] = useState({});\n  const [truckLocations, setTruckLocations] = useState([]);\n  const [currentTruckIndex, setCurrentTruckIndex] = useState(0);\n  const [currentPopup, setCurrentPopup] = useState(null);\n  const markersRef = useRef({});\n  const token = 'RzBFAiEA9TdPYZkOoZGFxxv4ol07LdqDxc1N47-oljwMKoAMJ3MCID-fPyu0Yp77V7J0Qj0-9rVH2AFcIcJx00vpeBi5hGTPeyJ1IjoxLCJlIjoiMjAyNi0wMi0yOFQxNTozMDowMC4wMDArMDA6MDAifQ';\n  const headers = new Headers({\n    'Authorization': 'Bearer ' + token\n  });\n  const animateToTruck = (longitude, latitude) => {\n    if (!map.current) return;\n\n    // map.current.easeTo({\n    //   center: [longitude, latitude],\n    //   zoom: 17,\n    //   duration: 1000,\n    //   easing: t => t\n    // });\n\n    map.current.flyTo({\n      center: [longitude, latitude],\n      zoom: 17,\n      pitch: 60,\n      bearing: 10,\n      speed: 2.2,\n      curve: 1.5,\n      easing: t => t\n    });\n  };\n  const getColorFromSpeed = speed => {\n    const speedKmh = (speed || 0) * 1.852;\n    if (speedKmh <= 20) return '#ff0000';\n    if (speedKmh <= 35) return '#ffa500';\n    if (speedKmh <= 50) return '#ffff00';\n    return '#00ff00';\n  };\n  const handleReplayClick = async (deviceId, fromDate, toDate) => {\n    if (!map.current) return;\n    try {\n      const url = `http://localhost:8082/api/positions?deviceId=${deviceId}&from=${encodeURIComponent(fromDate)}&to=${encodeURIComponent(toDate)}`;\n      const response = await fetch(url, {\n        headers\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch path data');\n      }\n      const pathData = await response.json();\n      if (pathData.length === 0) {\n        alert('No historical data available for the selected time range');\n        return;\n      }\n      pathData.sort((a, b) => new Date(a.deviceTime) - new Date(b.deviceTime));\n      const features = [];\n      for (let i = 0; i < pathData.length - 1; i++) {\n        const speed = pathData[i].speed || 0;\n        const color = getColorFromSpeed(speed);\n        features.push({\n          type: 'Feature',\n          geometry: {\n            type: 'LineString',\n            coordinates: [[pathData[i].longitude, pathData[i].latitude], [pathData[i + 1].longitude, pathData[i + 1].latitude]]\n          },\n          properties: {\n            lineColor: color,\n            speed: speed * 1.852,\n            time: new Date(pathData[i].deviceTime).toLocaleString()\n          }\n        });\n      }\n      const source = map.current.getSource('path');\n      if (source) {\n        source.setData({\n          type: 'FeatureCollection',\n          features: features\n        });\n      } else {\n        map.current.addSource('path', {\n          type: 'geojson',\n          data: {\n            type: 'FeatureCollection',\n            features: features\n          }\n        });\n        map.current.addLayer({\n          'id': 'path-line',\n          'type': 'line',\n          'source': 'path',\n          'layout': {\n            'line-join': 'round',\n            'line-cap': 'round'\n          },\n          'paint': {\n            'line-color': {\n              'type': 'identity',\n              'property': 'lineColor'\n            },\n            'line-width': 4\n          }\n        });\n      }\n      const coordinates = pathData.map(pos => [pos.longitude, pos.latitude]);\n      const bounds = coordinates.reduce((bounds, coord) => {\n        return [[Math.min(bounds[0][0], coord[0]), Math.min(bounds[0][1], coord[1])], [Math.max(bounds[1][0], coord[0]), Math.max(bounds[1][1], coord[1])]];\n      }, [[coordinates[0][0], coordinates[0][1]], [coordinates[0][0], coordinates[0][1]]]);\n      map.current.fitBounds(bounds, {\n        padding: 50\n      });\n    } catch (error) {\n      console.error('Error showing path:', error);\n      alert('Error showing path. Please try again.');\n    }\n  };\n  useEffect(() => {\n    if (mapContainer.current && !map.current) {\n      try {\n        map.current = new maplibregl.Map({\n          container: mapContainer.current,\n          style: 'https://basemaps.cartocdn.com/gl/voyager-gl-style/style.json',\n          center: [78.9629, 20.5937],\n          zoom: 5\n        });\n        map.current.on('load', () => {\n          map.current.addSource('path', {\n            type: 'geojson',\n            data: {\n              type: 'FeatureCollection',\n              features: []\n            }\n          });\n          map.current.addLayer({\n            'id': 'path-line',\n            'type': 'line',\n            'source': 'path',\n            'layout': {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            'paint': {\n              'line-color': {\n                'type': 'identity',\n                'property': 'lineColor'\n              },\n              'line-width': 4\n            }\n          });\n          map.current.on('zoom', () => {\n            const zoom = map.current.getZoom();\n            Object.values(markers).forEach(marker => {\n              const element = marker.getElement();\n              const size = zoom >= 14 ? 40 : 30;\n              element.style.width = `${size}px`;\n              element.style.height = `${size}px`;\n            });\n          });\n          updateVehicleLocations();\n        });\n      } catch (error) {\n        console.error('Error initializing map:', error);\n      }\n    }\n    return () => {\n      if (map.current) {\n        map.current.remove();\n        map.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'ArrowLeft') {\n        handlePrevTruck();\n      } else if (e.key === 'ArrowRight') {\n        handleNextTruck();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [currentTruckIndex, truckLocations]);\n  const drawTruckRoute = async deviceId => {\n    try {\n      const response = await fetch(`http://localhost:3000/api/devices/${deviceId}/manage-geofence`);\n      const data = await response.json();\n      console.log(\"Route API Response:\", data);\n      if (data.message === \"Geofence already exists for this truck.\") {\n        var _data$geofence;\n        const area = (_data$geofence = data.geofence) === null || _data$geofence === void 0 ? void 0 : _data$geofence.area;\n        if (!area || !area.startsWith(\"LINESTRING(\")) {\n          alert(\"Invalid or missing LINESTRING data in the geofence.\");\n          return;\n        }\n\n        // Extract coordinates from LINESTRING\n        const coordinates = area.replace(\"LINESTRING(\", \"\").replace(\")\", \"\").split(\",\").map(coord => coord.trim().split(\" \").map(Number)).map(coord => [coord[1], coord[0]]);\n        ;\n        console.log(\"Extracted Coordinates:\", coordinates);\n        if (!coordinates || coordinates.length < 2) {\n          alert(\"Route data is incomplete or invalid.\");\n          return;\n        }\n\n        // Check if the source already exists\n        if (map.current.getSource(\"truck-route\")) {\n          console.log(\"Updating existing route source...\");\n          map.current.getSource(\"truck-route\").setData({\n            type: \"Feature\",\n            geometry: {\n              type: \"LineString\",\n              coordinates: coordinates\n            }\n          });\n        } else {\n          console.log(\"Adding new route source...\");\n          // Add source and layer if they don't exist\n          map.current.addSource(\"truck-route\", {\n            type: \"geojson\",\n            data: {\n              type: \"Feature\",\n              geometry: {\n                type: \"LineString\",\n                coordinates: coordinates\n              }\n            }\n          });\n          map.current.addLayer({\n            id: \"truck-route\",\n            type: \"line\",\n            source: \"truck-route\",\n            layout: {\n              \"line-join\": \"round\",\n              \"line-cap\": \"round\"\n            },\n            paint: {\n              \"line-color\": \"#007aff\",\n              \"line-width\": 4\n            }\n          });\n        }\n\n        // Fit the map to the route\n        const bounds = coordinates.reduce((bounds, coord) => bounds.extend(coord), new maplibregl.LngLatBounds(coordinates[0], coordinates[0]));\n        map.current.fitBounds(bounds, {\n          padding: 50\n        });\n      } else {\n        alert(data.message || \"Unable to fetch the route for this truck.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching truck route:\", error);\n      alert(\"Failed to fetch the truck route.\");\n    }\n  };\n  const updateVehicleLocations = async () => {\n    if (!map.current) return;\n    try {\n      const response = await fetch('http://localhost:8082/api/positions', {\n        headers\n      });\n      const data = await response.json();\n      data.forEach(position => {\n        const {\n          latitude: lat,\n          longitude: lon,\n          deviceId\n        } = position;\n        if (!markersRef.current[deviceId]) {\n          const zoom = map.current.getZoom();\n          const element = createCustomMarkerElement(zoom);\n          const marker = new maplibregl.Marker({\n            element: element,\n            clickTolerance: 3\n          }).setLngLat([lon, lat]).addTo(map.current);\n\n          // Add click handler to the marker element\n          marker.getElement().addEventListener('click', e => {\n            e.stopPropagation(); // Prevent event bubbling\n            animateToTruck(lon, lat);\n\n            // Show popup after a short delay to allow zoom animation\n\n            drawTruckRoute(deviceId);\n            setTimeout(() => {\n              const popupContent = createPopupContent(position, deviceId, handleReplayClick);\n              new maplibregl.Popup({\n                offset: 25\n              }).setLngLat([lon, lat]).setDOMContent(popupContent).addTo(map.current);\n            }, 1000);\n          });\n          markersRef.current[deviceId] = marker;\n        } else {\n          markersRef.current[deviceId].setLngLat([lon, lat]);\n        }\n      });\n      setTruckLocations(data);\n    } catch (error) {\n      console.error('Error fetching Traccar data:', error);\n    }\n    setTimeout(updateVehicleLocations, 1000);\n  };\n  const handlePrevTruck = () => {\n    if (truckLocations.length > 0 && map.current) {\n      const newIndex = (currentTruckIndex - 1 + truckLocations.length) % truckLocations.length;\n      setCurrentTruckIndex(newIndex);\n      const truck = truckLocations[newIndex];\n      animateToTruck(truck.longitude, truck.latitude);\n      if (currentPopup) {\n        currentPopup.remove();\n      }\n      setTimeout(() => {\n        const popupContent = createPopupContent(truck, truck.deviceId, handleReplayClick);\n        const popup = new maplibregl.Popup({\n          offset: 25\n        }).setLngLat([truck.longitude, truck.latitude]).setDOMContent(popupContent).addTo(map.current);\n        setCurrentPopup(popup);\n      }, 1200);\n    }\n  };\n  const handleNextTruck = () => {\n    if (truckLocations.length > 0 && map.current) {\n      const newIndex = (currentTruckIndex + 1) % truckLocations.length;\n      setCurrentTruckIndex(newIndex);\n      const truck = truckLocations[newIndex];\n      animateToTruck(truck.longitude, truck.latitude);\n      if (currentPopup) {\n        currentPopup.remove();\n      }\n      setTimeout(() => {\n        const popupContent = createPopupContent(truck, truck.deviceId, handleReplayClick);\n        const popup = new maplibregl.Popup({\n          offset: 25\n        }).setLngLat([truck.longitude, truck.latitude]).setDOMContent(popupContent).addTo(map.current);\n        setCurrentPopup(popup);\n      }, 1200);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full h-full\",\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '400px',\n          overflowY: 'auto',\n          background: '#f4f4f4',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 bg-black/30 p-2 rounded-lg z-20\",\n          style: {\n            marginBottom: '10px',\n            marginTop: '20px',\n            backgroundColor: 'rgba(0,0,0,0.3)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: 'rgba(0,0,0,0.5)',\n              color: 'white',\n              padding: '5px 10px',\n              borderRadius: '5px',\n              cursor: 'pointer',\n              marginRight: '10px'\n            },\n            onClick: handlePrevTruck,\n            children: \"\\u2190 Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'white',\n              backgroundColor: 'rgba(0,0,0,0.4)',\n              padding: '5px 10px',\n              borderRadius: '5px'\n            },\n            children: truckLocations.length > 0 ? `${currentTruckIndex + 1}/${truckLocations.length}` : '0/0'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: 'rgba(0,0,0,0.5)',\n              color: 'white',\n              padding: '5px 10px',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            onClick: handleNextTruck,\n            children: \"Next \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            color: 'white',\n            padding: '5px 10px',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          onClick: () => {\n            if (map.current) {\n              map.current.easeTo({\n                zoom: 5,\n                duration: 1000\n              });\n            }\n          },\n          children: \"Reset View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: mapContainer,\n          className: \"absolute inset-0\",\n          style: {\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 5\n  }, this);\n};\n_s(TraccarMap, \"e5jnT9PoxKpWcnNoh5v6iyuJgeE=\");\n_c = TraccarMap;\nexport default TraccarMap;\nvar _c;\n$RefreshReg$(_c, \"TraccarMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","maplibregl","jsxDEV","_jsxDEV","createCustomMarkerElement","zoom","element","document","createElement","className","size","style","width","height","backgroundImage","backgroundSize","backgroundPosition","cursor","createPopupContent","position","deviceId","onReplayClick","div","now","Date","yesterday","nowFormatted","toISOString","slice","yesterdayFormatted","innerHTML","speed","toFixed","attributes","batteryLevel","accuracy","deviceTime","toLocaleString","setTimeout","button","getElementById","addEventListener","fromDateInput","value","toDateInput","fromDate","toDate","TraccarMap","_s","mapContainer","map","markers","setMarkers","truckLocations","setTruckLocations","currentTruckIndex","setCurrentTruckIndex","currentPopup","setCurrentPopup","markersRef","token","headers","Headers","animateToTruck","longitude","latitude","current","flyTo","center","pitch","bearing","curve","easing","t","getColorFromSpeed","speedKmh","handleReplayClick","url","encodeURIComponent","response","fetch","ok","Error","pathData","json","length","alert","sort","a","b","features","i","color","push","type","geometry","coordinates","properties","lineColor","time","source","getSource","setData","addSource","data","addLayer","pos","bounds","reduce","coord","Math","min","max","fitBounds","padding","error","console","Map","container","on","getZoom","Object","values","forEach","marker","getElement","updateVehicleLocations","remove","handleKeyDown","e","key","handlePrevTruck","handleNextTruck","removeEventListener","drawTruckRoute","log","message","_data$geofence","area","geofence","startsWith","replace","split","trim","Number","id","layout","paint","extend","LngLatBounds","lat","lon","Marker","clickTolerance","setLngLat","addTo","stopPropagation","popupContent","Popup","offset","setDOMContent","newIndex","truck","popup","children","display","overflowY","background","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","marginTop","backgroundColor","borderRadius","marginRight","onClick","easeTo","duration","flex","ref","top","bottom","left","right","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/TraccarMap.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport maplibregl from 'maplibre-gl';\r\n\r\nconst createCustomMarkerElement = (zoom) => {\r\n  const element = document.createElement('div');\r\n  element.className = 'custom-marker';\r\n  \r\n  // Adjust the size based on zoom level\r\n  const size = zoom >= 14 ? 40 : 30;\r\n  \r\n  element.style.width = `${size}px`;\r\n  element.style.height = `${size}px`;\r\n  element.style.backgroundImage = 'url(/media/truck_top_view.png)';\r\n  element.style.backgroundSize = 'cover';\r\n  element.style.backgroundPosition = 'center';\r\n  element.style.cursor = 'pointer';\r\n  return element;\r\n};\r\n\r\nconst createPopupContent = (position, deviceId, onReplayClick) => {\r\n  const div = document.createElement('div');\r\n  div.className = 'p-4';\r\n  \r\n  // Get current time and yesterday\r\n  const now = new Date();\r\n  const yesterday = new Date(now - 24 * 60 * 60 * 1000);\r\n\r\n  // Format dates for display (local datetime-local format)\r\n  const nowFormatted = now.toISOString().slice(0, 16);\r\n  const yesterdayFormatted = yesterday.toISOString().slice(0, 16);\r\n  \r\n  div.innerHTML = `\r\n    <div class=\"mb-4\">\r\n      <p class=\"mb-2\"><strong>Device ID:</strong> ${deviceId}</p>\r\n      <p class=\"mb-2\"><strong>Speed:</strong> ${(position.speed * 1.852).toFixed(1)} km/h</p>\r\n      <p class=\"mb-2\"><strong>Battery:</strong> ${position.attributes.batteryLevel}%</p>\r\n      <p class=\"mb-2\"><strong>Accuracy:</strong> ${position.accuracy.toFixed(1)}m</p>\r\n      <p class=\"mb-2\"><strong>Last Update:</strong> ${new Date(position.deviceTime).toLocaleString()}</p>\r\n    </div>\r\n    <div class=\"border-t pt-4\">\r\n      <div class=\"mb-3\">\r\n        <label class=\"block text-sm mb-1\">From:</label>\r\n        <input type=\"datetime-local\" id=\"fromDate-${deviceId}\" value=\"${yesterdayFormatted}\" class=\"w-full p-2 border rounded\"/>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label class=\"block text-sm mb-1\">To:</label>\r\n        <input type=\"datetime-local\" id=\"toDate-${deviceId}\" value=\"${nowFormatted}\" class=\"w-full p-2 border rounded\"/>\r\n      </div>\r\n      <button id=\"replayBtn-${deviceId}\" class=\"w-full bg-green-500 text-white p-2 rounded hover:bg-green-600\">\r\n        Show Path\r\n      </button>\r\n    </div>\r\n  `;\r\n\r\n  // Add event listener after the popup is added to DOM\r\n  setTimeout(() => {\r\n    const button = document.getElementById(`replayBtn-${deviceId}`);\r\n    if (button) {\r\n      button.addEventListener('click', () => {\r\n        const fromDateInput = document.getElementById(`fromDate-${deviceId}`).value;\r\n        const toDateInput = document.getElementById(`toDate-${deviceId}`).value;\r\n        \r\n        const fromDate = new Date(fromDateInput).toISOString();\r\n        const toDate = new Date(toDateInput).toISOString();\r\n        \r\n        onReplayClick(deviceId, fromDate, toDate);\r\n      });\r\n    }\r\n  }, 0);\r\n\r\n  return div;\r\n};\r\n\r\nconst TraccarMap = () => {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [markers, setMarkers] = useState({});\r\n  const [truckLocations, setTruckLocations] = useState([]);\r\n  const [currentTruckIndex, setCurrentTruckIndex] = useState(0);\r\n  const [currentPopup, setCurrentPopup] = useState(null);\r\n  const markersRef = useRef({});\r\n\r\n  const token = 'RzBFAiEA9TdPYZkOoZGFxxv4ol07LdqDxc1N47-oljwMKoAMJ3MCID-fPyu0Yp77V7J0Qj0-9rVH2AFcIcJx00vpeBi5hGTPeyJ1IjoxLCJlIjoiMjAyNi0wMi0yOFQxNTozMDowMC4wMDArMDA6MDAifQ';\r\n  const headers = new Headers({\r\n    'Authorization': 'Bearer ' + token\r\n  });\r\n\r\n  const animateToTruck = (longitude, latitude) => {\r\n    if (!map.current) return;\r\n\r\n    // map.current.easeTo({\r\n    //   center: [longitude, latitude],\r\n    //   zoom: 17,\r\n    //   duration: 1000,\r\n    //   easing: t => t\r\n    // });\r\n\r\n    map.current.flyTo({\r\n      center: [longitude, latitude],\r\n      zoom: 17,\r\n      pitch: 60,\r\n      bearing: 10,\r\n      speed: 2.2,\r\n      curve: 1.5,\r\n      easing: (t) => t\r\n    });\r\n  };\r\n\r\n  const getColorFromSpeed = (speed) => {\r\n    const speedKmh = (speed || 0) * 1.852;\r\n    if (speedKmh <= 20) return '#ff0000';\r\n    if (speedKmh <= 35) return '#ffa500';\r\n    if (speedKmh <= 50) return '#ffff00';\r\n    return '#00ff00';\r\n  };\r\n\r\n  const handleReplayClick = async (deviceId, fromDate, toDate) => {\r\n    if (!map.current) return;\r\n\r\n    try {\r\n      const url = `http://localhost:8082/api/positions?deviceId=${deviceId}&from=${encodeURIComponent(fromDate)}&to=${encodeURIComponent(toDate)}`;\r\n      const response = await fetch(url, { headers });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch path data');\r\n      }\r\n\r\n      const pathData = await response.json();\r\n      \r\n      if (pathData.length === 0) {\r\n        alert('No historical data available for the selected time range');\r\n        return;\r\n      }\r\n\r\n      pathData.sort((a, b) => new Date(a.deviceTime) - new Date(b.deviceTime));\r\n\r\n      const features = [];\r\n      for (let i = 0; i < pathData.length - 1; i++) {\r\n        const speed = pathData[i].speed || 0;\r\n        const color = getColorFromSpeed(speed);\r\n        \r\n        features.push({\r\n          type: 'Feature',\r\n          geometry: {\r\n            type: 'LineString',\r\n            coordinates: [\r\n              [pathData[i].longitude, pathData[i].latitude],\r\n              [pathData[i + 1].longitude, pathData[i + 1].latitude]\r\n            ]\r\n          },\r\n          properties: {\r\n            lineColor: color,\r\n            speed: speed * 1.852,\r\n            time: new Date(pathData[i].deviceTime).toLocaleString()\r\n          }\r\n        });\r\n      }\r\n\r\n      const source = map.current.getSource('path');\r\n      if (source) {\r\n        source.setData({\r\n          type: 'FeatureCollection',\r\n          features: features\r\n        });\r\n      } else {\r\n        map.current.addSource('path', {\r\n          type: 'geojson',\r\n          data: {\r\n            type: 'FeatureCollection',\r\n            features: features\r\n          }\r\n        });\r\n\r\n        map.current.addLayer({\r\n          'id': 'path-line',\r\n          'type': 'line',\r\n          'source': 'path',\r\n          'layout': {\r\n            'line-join': 'round',\r\n            'line-cap': 'round'\r\n          },\r\n          'paint': {\r\n            'line-color': {\r\n              'type': 'identity',\r\n              'property': 'lineColor'\r\n            },\r\n            'line-width': 4\r\n          }\r\n        });\r\n      }\r\n\r\n      const coordinates = pathData.map(pos => [pos.longitude, pos.latitude]);\r\n      const bounds = coordinates.reduce((bounds, coord) => {\r\n        return [\r\n          [Math.min(bounds[0][0], coord[0]), Math.min(bounds[0][1], coord[1])],\r\n          [Math.max(bounds[1][0], coord[0]), Math.max(bounds[1][1], coord[1])]\r\n        ];\r\n      }, [[coordinates[0][0], coordinates[0][1]], [coordinates[0][0], coordinates[0][1]]]);\r\n\r\n      map.current.fitBounds(bounds, { padding: 50 });\r\n\r\n    } catch (error) {\r\n      console.error('Error showing path:', error);\r\n      alert('Error showing path. Please try again.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (mapContainer.current && !map.current) {\r\n      try {\r\n        map.current = new maplibregl.Map({\r\n          container: mapContainer.current,\r\n          style: 'https://basemaps.cartocdn.com/gl/voyager-gl-style/style.json',\r\n          center: [78.9629, 20.5937],\r\n          zoom: 5\r\n        });\r\n\r\n        map.current.on('load', () => {\r\n          map.current.addSource('path', {\r\n            type: 'geojson',\r\n            data: {\r\n              type: 'FeatureCollection',\r\n              features: []\r\n            }\r\n          });\r\n\r\n          map.current.addLayer({\r\n            'id': 'path-line',\r\n            'type': 'line',\r\n            'source': 'path',\r\n            'layout': {\r\n              'line-join': 'round',\r\n              'line-cap': 'round'\r\n            },\r\n            'paint': {\r\n              'line-color': {\r\n                'type': 'identity',\r\n                'property': 'lineColor'\r\n              },\r\n              'line-width': 4\r\n            }\r\n          });\r\n\r\n          map.current.on('zoom', () => {\r\n            const zoom = map.current.getZoom();\r\n            Object.values(markers).forEach(marker => {\r\n              const element = marker.getElement();\r\n              const size = zoom >= 14 ? 40 : 30;\r\n              element.style.width = `${size}px`;\r\n              element.style.height = `${size}px`;\r\n            });\r\n          });\r\n\r\n          updateVehicleLocations();\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('Error initializing map:', error);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if (map.current) {\r\n        map.current.remove();\r\n        map.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'ArrowLeft') {\r\n        handlePrevTruck();\r\n      } else if (e.key === 'ArrowRight') {\r\n        handleNextTruck();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [currentTruckIndex, truckLocations]);\r\n\r\n\r\n\r\n\r\n  const drawTruckRoute = async (deviceId) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:3000/api/devices/${deviceId}/manage-geofence`);\r\n    const data = await response.json();\r\n\r\n    console.log(\"Route API Response:\", data);\r\n\r\n    if (data.message === \"Geofence already exists for this truck.\") {\r\n      const area = data.geofence?.area;\r\n\r\n      if (!area || !area.startsWith(\"LINESTRING(\")) {\r\n        alert(\"Invalid or missing LINESTRING data in the geofence.\");\r\n        return;\r\n      }\r\n\r\n      // Extract coordinates from LINESTRING\r\n      const coordinates = area\r\n        .replace(\"LINESTRING(\", \"\")\r\n        .replace(\")\", \"\")\r\n        .split(\",\")\r\n        .map(coord => coord.trim().split(\" \").map(Number))\r\n        .map(coord => [coord[1], coord[0]]);\r\n        ;\r\n\r\n      console.log(\"Extracted Coordinates:\", coordinates);\r\n\r\n      if (!coordinates || coordinates.length < 2) {\r\n        alert(\"Route data is incomplete or invalid.\");\r\n        return;\r\n      }\r\n\r\n      // Check if the source already exists\r\n      if (map.current.getSource(\"truck-route\")) {\r\n        console.log(\"Updating existing route source...\");\r\n        map.current.getSource(\"truck-route\").setData({\r\n          type: \"Feature\",\r\n          geometry: {\r\n            type: \"LineString\",\r\n            coordinates: coordinates,\r\n          },\r\n        });\r\n      } else {\r\n        console.log(\"Adding new route source...\");\r\n        // Add source and layer if they don't exist\r\n        map.current.addSource(\"truck-route\", {\r\n          type: \"geojson\",\r\n          data: {\r\n            type: \"Feature\",\r\n            geometry: {\r\n              type: \"LineString\",\r\n              coordinates: coordinates,\r\n            },\r\n          },\r\n        });\r\n\r\n        map.current.addLayer({\r\n          id: \"truck-route\",\r\n          type: \"line\",\r\n          source: \"truck-route\",\r\n          layout: {\r\n            \"line-join\": \"round\",\r\n            \"line-cap\": \"round\",\r\n          },\r\n          paint: {\r\n            \"line-color\": \"#007aff\",\r\n            \"line-width\": 4,\r\n          },\r\n        });\r\n      }\r\n\r\n      // Fit the map to the route\r\n      const bounds = coordinates.reduce(\r\n        (bounds, coord) => bounds.extend(coord),\r\n        new maplibregl.LngLatBounds(coordinates[0], coordinates[0])\r\n      );\r\n      map.current.fitBounds(bounds, { padding: 50 });\r\n    } else {\r\n      alert(data.message || \"Unable to fetch the route for this truck.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching truck route:\", error);\r\n    alert(\"Failed to fetch the truck route.\");\r\n  }\r\n};\r\n\r\n  \r\n \r\n\r\n\r\n  const updateVehicleLocations = async () => {\r\n    if (!map.current) return;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8082/api/positions', { headers });\r\n      const data = await response.json();\r\n\r\n      data.forEach(position => {\r\n        const { latitude: lat, longitude: lon, deviceId } = position;\r\n        \r\n        if (!markersRef.current[deviceId]) {\r\n          const zoom = map.current.getZoom();\r\n          const element = createCustomMarkerElement(zoom);\r\n          \r\n          const marker = new maplibregl.Marker({\r\n            element: element,\r\n            clickTolerance: 3\r\n          })\r\n            .setLngLat([lon, lat])\r\n            .addTo(map.current);\r\n\r\n          // Add click handler to the marker element\r\n          marker.getElement().addEventListener('click', (e) => {\r\n            e.stopPropagation(); // Prevent event bubbling\r\n            animateToTruck(lon, lat);\r\n            \r\n            // Show popup after a short delay to allow zoom animation\r\n            \r\n            drawTruckRoute(deviceId);\r\n\r\n            setTimeout(() => {\r\n              const popupContent = createPopupContent(\r\n                position,\r\n                deviceId,\r\n                handleReplayClick\r\n              );\r\n              \r\n              new maplibregl.Popup({ offset: 25 })\r\n                .setLngLat([lon, lat])\r\n                .setDOMContent(popupContent)\r\n                .addTo(map.current);\r\n            }, 1000);\r\n          });\r\n\r\n          markersRef.current[deviceId] = marker;\r\n        } else {\r\n          markersRef.current[deviceId].setLngLat([lon, lat]);\r\n        }\r\n      });\r\n\r\n      setTruckLocations(data);\r\n    } catch (error) {\r\n      console.error('Error fetching Traccar data:', error);\r\n    }\r\n\r\n    setTimeout(updateVehicleLocations, 1000);\r\n  };\r\n\r\n  const handlePrevTruck = () => {\r\n    if (truckLocations.length > 0 && map.current) {\r\n      const newIndex = (currentTruckIndex - 1 + truckLocations.length) % truckLocations.length;\r\n      setCurrentTruckIndex(newIndex);\r\n      const truck = truckLocations[newIndex];\r\n      animateToTruck(truck.longitude, truck.latitude);\r\n      \r\n      if (currentPopup) {\r\n        currentPopup.remove();\r\n      }\r\n\r\n      setTimeout(() => {\r\n        const popupContent = createPopupContent(truck, truck.deviceId, handleReplayClick);\r\n        \r\n        const popup = new maplibregl.Popup({ offset: 25 })\r\n          .setLngLat([truck.longitude, truck.latitude])\r\n          .setDOMContent(popupContent)\r\n          .addTo(map.current);\r\n\r\n          setCurrentPopup(popup);\r\n      }, 1200);        \r\n    }\r\n  };\r\n\r\n  const handleNextTruck = () => {\r\n    if (truckLocations.length > 0 && map.current) {\r\n      const newIndex = (currentTruckIndex + 1) % truckLocations.length;\r\n      setCurrentTruckIndex(newIndex);\r\n      const truck = truckLocations[newIndex];\r\n      animateToTruck(truck.longitude, truck.latitude);\r\n      \r\n      if (currentPopup) {\r\n        currentPopup.remove();\r\n      }\r\n\r\n      setTimeout(() => {\r\n        const popupContent = createPopupContent(truck, truck.deviceId, handleReplayClick);\r\n        \r\n        const popup = new maplibregl.Popup({ offset: 25 })\r\n          .setLngLat([truck.longitude, truck.latitude])\r\n          .setDOMContent(popupContent)\r\n          .addTo(map.current);\r\n\r\n          setCurrentPopup(popup);\r\n      }, 1200);\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"relative w-full h-full\" style={{ position: 'relative', width: '100%', height: '100vh' }}>\r\n      <div style={{ display: 'flex', width: '100%', height: '100%' }}>\r\n        {/* Left Panel - adjust contents as desired */}\r\n        <div style={{ width: '400px', overflowY: 'auto', background: '#f4f4f4', padding: '20px' }}>\r\n          \r\n          <p>\r\n            \r\n          </p>\r\n          <div className=\"flex items-center gap-2 bg-black/30 p-2 rounded-lg z-20\" style={{ marginBottom: '10px', marginTop: '20px', backgroundColor: 'rgba(0,0,0,0.3)' }}>\r\n            <button\r\n              style={{\r\n                backgroundColor: 'rgba(0,0,0,0.5)',\r\n                color: 'white',\r\n                padding: '5px 10px',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer',\r\n                marginRight: '10px'\r\n              }}\r\n              onClick={handlePrevTruck}\r\n            >\r\n              ← Previous\r\n            </button>\r\n\r\n            <div style={{ color: 'white', backgroundColor: 'rgba(0,0,0,0.4)', padding: '5px 10px', borderRadius: '5px' }}>\r\n              {truckLocations.length > 0 ? `${currentTruckIndex + 1}/${truckLocations.length}` : '0/0'}\r\n            </div>\r\n\r\n            <button\r\n              style={{\r\n                backgroundColor: 'rgba(0,0,0,0.5)',\r\n                color: 'white',\r\n                padding: '5px 10px',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={handleNextTruck}\r\n            >\r\n              Next →\r\n            </button>\r\n          </div>\r\n\r\n          <button\r\n            style={{\r\n              backgroundColor: 'rgba(0,0,0,0.5)',\r\n              color: 'white',\r\n              padding: '5px 10px',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer'\r\n            }}\r\n            onClick={() => {\r\n              if (map.current) {\r\n                map.current.easeTo({\r\n                  zoom: 5,\r\n                  duration: 1000\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            Reset View\r\n          </button>\r\n        </div>\r\n\r\n        {/* Map Container */}\r\n        <div style={{ flex: 1, position: 'relative' }}>\r\n          <div\r\n            ref={mapContainer}\r\n            className=\"absolute inset-0\"\r\n            style={{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0 }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default TraccarMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}