{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\DynamicRouteMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix for default marker icons in Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nconst DynamicRouteMap = () => {\n  _s();\n  var _routeData$route_deta;\n  const [routeData, setRouteData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [map, setMap] = useState(null);\n  const warehouseData = [{\n    id: \"W1\",\n    name: \"Central Hub\",\n    lat: 18.5204,\n    lng: 73.8554,\n    load: 15,\n    unload: 13,\n    processingTime: 30\n  }, {\n    id: \"W2\",\n    name: \"North Depot\",\n    lat: 18.5303,\n    lng: 73.9024,\n    load: 21,\n    unload: 23,\n    processingTime: 25\n  }, {\n    id: \"W3\",\n    name: \"South Warehouse\",\n    lat: 18.4947,\n    lng: 73.8372,\n    load: 45,\n    unload: 53,\n    processingTime: 35\n  }];\n  useEffect(() => {\n    const fetchRoute = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/dynamicRoute', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(warehouseData)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch route data');\n        }\n        const data = await response.json();\n        setRouteData(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchRoute();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: \"Loading map data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Center the map on the first warehouse\n  const center = [warehouseData[0].lat, warehouseData[0].lng];\n\n  // Create route lines from the coordinates\n  const routeLines = routeData === null || routeData === void 0 ? void 0 : (_routeData$route_deta = routeData.route_details) === null || _routeData$route_deta === void 0 ? void 0 : _routeData$route_deta.map((segment, index) => {\n    const coords = routeData.route_coordinates.filter(point => point.warehouse_id === segment.from_id || point.warehouse_id === segment.to_id).map(point => point.coordinate);\n    return /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: coords,\n      color: \"blue\",\n      weight: 3,\n      opacity: 0.7\n    }, `route-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-full relative\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: 13,\n      className: \"h-full w-full\",\n      whenCreated: setMap,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), warehouseData.map(warehouse => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [warehouse.lat, warehouse.lng],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold\",\n              children: warehouse.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Load: \", warehouse.load]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Unload: \", warehouse.unload]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Processing Time: \", warehouse.processingTime, \" min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, warehouse.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)), routeLines]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicRouteMap, \"aM7osOAuxrXGBvkP7rnjhTOL0jY=\");\n_c = DynamicRouteMap;\nexport default DynamicRouteMap;\nvar _c;\n$RefreshReg$(_c, \"DynamicRouteMap\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","DynamicRouteMap","_s","_routeData$route_deta","routeData","setRouteData","loading","setLoading","error","setError","map","setMap","warehouseData","id","name","lat","lng","load","unload","processingTime","fetchRoute","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","routeLines","route_details","segment","index","coords","route_coordinates","filter","point","warehouse_id","from_id","to_id","coordinate","positions","color","weight","opacity","zoom","whenCreated","url","attribution","warehouse","position","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/DynamicRouteMap.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n\r\n// Fix for default marker icons in Leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\nconst DynamicRouteMap = () => {\r\n  const [routeData, setRouteData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [map, setMap] = useState(null);\r\n\r\n  const warehouseData = [\r\n    { \r\n      id: \"W1\", \r\n      name: \"Central Hub\",\r\n      lat: 18.5204, \r\n      lng: 73.8554,            \r\n      load: 15,\r\n      unload: 13,\r\n      processingTime: 30\r\n    },\r\n    { \r\n      id: \"W2\",\r\n      name: \"North Depot\",\r\n      lat: 18.5303, \r\n      lng: 73.9024,            \r\n      load: 21,\r\n      unload: 23,\r\n      processingTime: 25\r\n    },\r\n    { \r\n      id: \"W3\",\r\n      name: \"South Warehouse\",\r\n      lat: 18.4947, \r\n      lng: 73.8372,\r\n      load: 45,\r\n      unload: 53,\r\n      processingTime: 35\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchRoute = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8000/api/dynamicRoute', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(warehouseData),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch route data');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setRouteData(data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRoute();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"flex items-center justify-center h-full\">Loading map data...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"flex items-center justify-center h-full text-red-500\">Error: {error}</div>;\r\n  }\r\n\r\n  // Center the map on the first warehouse\r\n  const center = [warehouseData[0].lat, warehouseData[0].lng];\r\n\r\n  // Create route lines from the coordinates\r\n  const routeLines = routeData?.route_details?.map((segment, index) => {\r\n    const coords = routeData.route_coordinates\r\n      .filter(point => \r\n        (point.warehouse_id === segment.from_id || point.warehouse_id === segment.to_id))\r\n      .map(point => point.coordinate);\r\n    \r\n    return (\r\n      <Polyline\r\n        key={`route-${index}`}\r\n        positions={coords}\r\n        color=\"blue\"\r\n        weight={3}\r\n        opacity={0.7}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"h-screen w-full relative\">\r\n      <MapContainer\r\n        center={center}\r\n        zoom={13}\r\n        className=\"h-full w-full\"\r\n        whenCreated={setMap}\r\n      >\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        \r\n        {/* Render warehouse markers */}\r\n        {warehouseData.map((warehouse) => (\r\n          <Marker\r\n            key={warehouse.id}\r\n            position={[warehouse.lat, warehouse.lng]}\r\n          >\r\n            <Popup>\r\n              <div>\r\n                <h3 className=\"font-bold\">{warehouse.name}</h3>\r\n                <p>Load: {warehouse.load}</p>\r\n                <p>Unload: {warehouse.unload}</p>\r\n                <p>Processing Time: {warehouse.processingTime} min</p>\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n\r\n        {/* Render route lines */}\r\n        {routeLines}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicRouteMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}