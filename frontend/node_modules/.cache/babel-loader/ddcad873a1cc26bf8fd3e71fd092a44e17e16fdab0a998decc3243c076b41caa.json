{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\Reports.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reports = () => {\n  _s();\n  const [trucks, setTrucks] = useState([]);\n  const [reportData, setReportData] = useState([]);\n\n  // Fetch all trucks and their details on component mount\n  useEffect(() => {\n    fetchTrucks();\n  }, []);\n  const fetchTrucks = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/devices', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          key: 'value'\n        })\n      });\n      if (!response.ok) throw new Error('Failed to fetch trucks');\n      const data = await response.json();\n      setTrucks(data || []);\n      fetchTruckDetails(data || []);\n    } catch (error) {\n      console.error('Error fetching trucks:', error);\n    }\n  };\n  const fetchTruckDetails = async trucks => {\n    try {\n      const details = await Promise.all(trucks.map(async truck => {\n        const capacity = await getTruckCapacity(truck.uniqueId);\n        console.log(capacity);\n        const status = await getTruckStatus(truck.uniqueId);\n        return {\n          truckId: truck.uniqueId,\n          name: truck.name || `Truck ${truck.uniqueId}`,\n          capacityUtilization: capacity.filled_capacity || 'N/A',\n          currentLocation: status.current_location || 'N/A',\n          lastUpdated: status.lastUpdated || 'N/A'\n        };\n      }));\n      setReportData(details);\n    } catch (error) {\n      console.error('Error fetching truck details:', error);\n    }\n  };\n  const getTruckCapacity = async uniqueId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/getTruckCapacity?truckId=${uniqueId}`);\n      if (!response.ok) throw new Error('Failed to fetch truck capacity');\n      return await response.json();\n    } catch (error) {\n      console.error(`Error fetching capacity for truck ${uniqueId}:`, error);\n      return {};\n    }\n  };\n  const getTruckStatus = async uniqueId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/getTruckStatus?uniqueId=${uniqueId}`);\n      if (!response.ok) throw new Error('Failed to fetch truck status');\n      return await response.json();\n    } catch (error) {\n      console.error(`Error fetching status for truck ${uniqueId}:`, error);\n      return {};\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Truck Status Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), reportData.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border-collapse border border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-300 px-4 py-2\",\n            children: \"Truck ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-300 px-4 py-2\",\n            children: \"Truck Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-300 px-4 py-2\",\n            children: \"Current Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border border-gray-300 px-4 py-2\",\n            children: \"Capacity Utilization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reportData.map((report, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border border-gray-300 px-4 py-2\",\n            children: report.truckId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border border-gray-300 px-4 py-2\",\n            children: report.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border border-gray-300 px-4 py-2\",\n            children: report.currentLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border border-gray-300 px-4 py-2\",\n            children: report.capacityUtilization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Loading truck details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Reports, \"QD4UsQBuJ65kfs646WLonz9FWRY=\");\n_c = Reports;\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Reports","_s","trucks","setTrucks","reportData","setReportData","fetchTrucks","response","fetch","method","headers","body","JSON","stringify","key","ok","Error","data","json","fetchTruckDetails","error","console","details","Promise","all","map","truck","capacity","getTruckCapacity","uniqueId","log","status","getTruckStatus","truckId","name","capacityUtilization","filled_capacity","currentLocation","current_location","lastUpdated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","report","index","_c","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/Reports.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Reports = () => {\r\n  const [trucks, setTrucks] = useState([]);\r\n  const [reportData, setReportData] = useState([]);\r\n\r\n  // Fetch all trucks and their details on component mount\r\n  useEffect(() => {\r\n    fetchTrucks();\r\n  }, []);\r\n\r\n  const fetchTrucks = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/devices', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ key: 'value' }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to fetch trucks');\r\n\r\n      const data = await response.json();\r\n      setTrucks(data || []);\r\n      fetchTruckDetails(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching trucks:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTruckDetails = async (trucks) => {\r\n    try {\r\n      const details = await Promise.all(\r\n        trucks.map(async (truck) => {\r\n          const capacity = await getTruckCapacity(truck.uniqueId);\r\n          console.log(capacity)\r\n          const status = await getTruckStatus(truck.uniqueId);\r\n          return {\r\n            truckId: truck.uniqueId,\r\n            name: truck.name || `Truck ${truck.uniqueId}`,\r\n            capacityUtilization: capacity.filled_capacity || 'N/A',\r\n            currentLocation: status.current_location || 'N/A',\r\n            lastUpdated: status.lastUpdated || 'N/A',\r\n          };\r\n        })\r\n      );\r\n      setReportData(details);\r\n    } catch (error) {\r\n      console.error('Error fetching truck details:', error);\r\n    }\r\n  };\r\n\r\n  const getTruckCapacity = async (uniqueId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/getTruckCapacity?truckId=${uniqueId}`);\r\n      if (!response.ok) throw new Error('Failed to fetch truck capacity');\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`Error fetching capacity for truck ${uniqueId}:`, error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const getTruckStatus = async (uniqueId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/getTruckStatus?uniqueId=${uniqueId}`);\r\n      if (!response.ok) throw new Error('Failed to fetch truck status');\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`Error fetching status for truck ${uniqueId}:`, error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white rounded-lg shadow\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Truck Status Reports</h2>\r\n\r\n      {/* Report Table */}\r\n      {reportData.length > 0 ? (\r\n        <table className=\"w-full border-collapse border border-gray-300\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"border border-gray-300 px-4 py-2\">Truck ID</th>\r\n              <th className=\"border border-gray-300 px-4 py-2\">Truck Name</th>\r\n              <th className=\"border border-gray-300 px-4 py-2\">Current Location</th>\r\n              <th className=\"border border-gray-300 px-4 py-2\">Capacity Utilization</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {reportData.map((report, index) => (\r\n              <tr key={index}>\r\n                <td className=\"border border-gray-300 px-4 py-2\">{report.truckId}</td>\r\n                <td className=\"border border-gray-300 px-4 py-2\">{report.name}</td>\r\n                <td className=\"border border-gray-300 px-4 py-2\">{report.currentLocation}</td>\r\n                <td className=\"border border-gray-300 px-4 py-2\">{report.capacityUtilization}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p className=\"text-gray-500\">Loading truck details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}