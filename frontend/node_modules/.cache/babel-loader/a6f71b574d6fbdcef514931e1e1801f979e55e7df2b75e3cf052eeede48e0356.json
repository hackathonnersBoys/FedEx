{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suyash\\\\Code\\\\myproject\\\\frontend\\\\src\\\\components\\\\ui\\\\Button.jsx\";\n// components/ui/button.jsx\nimport React from \"react\";\n\n// Utility function to combine classNames (can be replaced with a similar function you use)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cn = (...classes) => classes.filter(Boolean).join(\" \");\nconst Button = /*#__PURE__*/React.forwardRef(_c = ({\n  className,\n  variant = \"primary\",\n  size = \"medium\",\n  asChild = false,\n  ...props\n}, ref) => {\n  // If `asChild` is true, use a custom element (e.g., `div` or `span`), else use a button\n  const Comp = asChild ? \"div\" : \"button\";\n\n  // Define base styles, variant styles, and size styles\n  const baseStyles = \"inline-flex items-center justify-center rounded-md font-medium transition-all duration-300 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\";\n  const variantStyles = {\n    primary: \"bg-blue-500 text-white hover:bg-blue-600\",\n    secondary: \"bg-gray-500 text-white hover:bg-gray-600\"\n  };\n  const sizeStyles = {\n    small: \"px-4 py-2 text-sm\",\n    medium: \"px-6 py-3 text-base\",\n    large: \"px-8 py-4 text-lg\"\n  };\n  return /*#__PURE__*/_jsxDEV(Comp, {\n    ref: ref,\n    ...props,\n    // Spread the remaining props (e.g., onClick, etc.)\n    className: cn(baseStyles, variantStyles[variant],\n    // Apply variant styles\n    sizeStyles[size],\n    // Apply size styles\n    className // Allow custom className overrides\n    )\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n});\n_c2 = Button;\nButton.displayName = \"Button\"; // Optional: Set a display name for better debugging\n\nexport { Button };\nvar _c, _c2;\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","cn","classes","filter","Boolean","join","Button","forwardRef","_c","className","variant","size","asChild","props","ref","Comp","baseStyles","variantStyles","primary","secondary","sizeStyles","small","medium","large","fileName","_jsxFileName","lineNumber","columnNumber","_c2","displayName","$RefreshReg$"],"sources":["C:/Users/suyash/Code/myproject/frontend/src/components/ui/Button.jsx"],"sourcesContent":["// components/ui/button.jsx\r\nimport React from \"react\";\r\n\r\n// Utility function to combine classNames (can be replaced with a similar function you use)\r\nconst cn = (...classes) => classes.filter(Boolean).join(\" \");\r\n\r\nconst Button = React.forwardRef(\r\n  ({ className, variant = \"primary\", size = \"medium\", asChild = false, ...props }, ref) => {\r\n    // If `asChild` is true, use a custom element (e.g., `div` or `span`), else use a button\r\n    const Comp = asChild ? \"div\" : \"button\";\r\n\r\n    // Define base styles, variant styles, and size styles\r\n    const baseStyles =\r\n      \"inline-flex items-center justify-center rounded-md font-medium transition-all duration-300 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\";\r\n\r\n    const variantStyles = {\r\n      primary: \"bg-blue-500 text-white hover:bg-blue-600\",\r\n      secondary: \"bg-gray-500 text-white hover:bg-gray-600\",\r\n    };\r\n\r\n    const sizeStyles = {\r\n      small: \"px-4 py-2 text-sm\",\r\n      medium: \"px-6 py-3 text-base\",\r\n      large: \"px-8 py-4 text-lg\",\r\n    };\r\n\r\n    return (\r\n      <Comp\r\n        ref={ref}\r\n        {...props} // Spread the remaining props (e.g., onClick, etc.)\r\n        className={cn(\r\n          baseStyles,\r\n          variantStyles[variant], // Apply variant styles\r\n          sizeStyles[size], // Apply size styles\r\n          className // Allow custom className overrides\r\n        )}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nButton.displayName = \"Button\"; // Optional: Set a display name for better debugging\r\n\r\nexport { Button };\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,EAAE,GAAGA,CAAC,GAAGC,OAAO,KAAKA,OAAO,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAE5D,MAAMC,MAAM,gBAAGR,KAAK,CAACS,UAAU,CAAAC,EAAA,GAC7BA,CAAC;EAAEC,SAAS;EAAEC,OAAO,GAAG,SAAS;EAAEC,IAAI,GAAG,QAAQ;EAAEC,OAAO,GAAG,KAAK;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,KAAK;EACvF;EACA,MAAMC,IAAI,GAAGH,OAAO,GAAG,KAAK,GAAG,QAAQ;;EAEvC;EACA,MAAMI,UAAU,GACd,iNAAiN;EAEnN,MAAMC,aAAa,GAAG;IACpBC,OAAO,EAAE,0CAA0C;IACnDC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,qBAAqB;IAC7BC,KAAK,EAAE;EACT,CAAC;EAED,oBACEvB,OAAA,CAACe,IAAI;IACHD,GAAG,EAAEA,GAAI;IAAA,GACLD,KAAK;IAAE;IACXJ,SAAS,EAAER,EAAE,CACXe,UAAU,EACVC,aAAa,CAACP,OAAO,CAAC;IAAE;IACxBU,UAAU,CAACT,IAAI,CAAC;IAAE;IAClBF,SAAS,CAAC;IACZ;EAAE;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CACF,CAAC;AAACC,GAAA,GAjCItB,MAAM;AAmCZA,MAAM,CAACuB,WAAW,GAAG,QAAQ,CAAC,CAAC;;AAE/B,SAASvB,MAAM;AAAG,IAAAE,EAAA,EAAAoB,GAAA;AAAAE,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}